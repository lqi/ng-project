// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "WaveclientRpc.pb.h"

@implementation WaveclientRpcRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [WaveclientRpcRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [RpcRoot registerAllExtensions:registry];
    [FederationRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ProtocolOpenRequest ()
@property (retain) NSString* participantId;
@property (retain) NSString* waveId;
@property (retain) NSMutableArray* mutableWaveletIdPrefixList;
@property int32_t maximumWavelets;
@property BOOL snapshots;
@end

@implementation ProtocolOpenRequest

- (BOOL) hasParticipantId {
  return !!hasParticipantId_;
}
- (void) setHasParticipantId:(BOOL) value {
  hasParticipantId_ = !!value;
}
@synthesize participantId;
- (BOOL) hasWaveId {
  return !!hasWaveId_;
}
- (void) setHasWaveId:(BOOL) value {
  hasWaveId_ = !!value;
}
@synthesize waveId;
@synthesize mutableWaveletIdPrefixList;
- (BOOL) hasMaximumWavelets {
  return !!hasMaximumWavelets_;
}
- (void) setHasMaximumWavelets:(BOOL) value {
  hasMaximumWavelets_ = !!value;
}
@synthesize maximumWavelets;
- (BOOL) hasSnapshots {
  return !!hasSnapshots_;
}
- (void) setHasSnapshots:(BOOL) value {
  hasSnapshots_ = !!value;
}
- (BOOL) snapshots {
  return !!snapshots_;
}
- (void) setSnapshots:(BOOL) value {
  snapshots_ = !!value;
}
- (void) dealloc {
  self.participantId = nil;
  self.waveId = nil;
  self.mutableWaveletIdPrefixList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.participantId = @"";
    self.waveId = @"";
    self.maximumWavelets = 0;
    self.snapshots = NO;
  }
  return self;
}
static ProtocolOpenRequest* defaultProtocolOpenRequestInstance = nil;
+ (void) initialize {
  if (self == [ProtocolOpenRequest class]) {
    defaultProtocolOpenRequestInstance = [[ProtocolOpenRequest alloc] init];
  }
}
+ (ProtocolOpenRequest*) defaultInstance {
  return defaultProtocolOpenRequestInstance;
}
- (ProtocolOpenRequest*) defaultInstance {
  return defaultProtocolOpenRequestInstance;
}
- (NSArray*) waveletIdPrefixList {
  return mutableWaveletIdPrefixList;
}
- (NSString*) waveletIdPrefixAtIndex:(int32_t) index {
  id value = [mutableWaveletIdPrefixList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasParticipantId) {
    return NO;
  }
  if (!self.hasWaveId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasParticipantId) {
    [output writeString:1 value:self.participantId];
  }
  if (self.hasWaveId) {
    [output writeString:2 value:self.waveId];
  }
  for (NSString* element in self.mutableWaveletIdPrefixList) {
    [output writeString:3 value:element];
  }
  if (self.hasMaximumWavelets) {
    [output writeInt32:4 value:self.maximumWavelets];
  }
  if (self.hasSnapshots) {
    [output writeBool:5 value:self.snapshots];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasParticipantId) {
    size += computeStringSize(1, self.participantId);
  }
  if (self.hasWaveId) {
    size += computeStringSize(2, self.waveId);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableWaveletIdPrefixList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableWaveletIdPrefixList.count;
  }
  if (self.hasMaximumWavelets) {
    size += computeInt32Size(4, self.maximumWavelets);
  }
  if (self.hasSnapshots) {
    size += computeBoolSize(5, self.snapshots);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProtocolOpenRequest*) parseFromData:(NSData*) data {
  return (ProtocolOpenRequest*)[[[ProtocolOpenRequest builder] mergeFromData:data] build];
}
+ (ProtocolOpenRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolOpenRequest*)[[[ProtocolOpenRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtocolOpenRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ProtocolOpenRequest*)[[[ProtocolOpenRequest builder] mergeFromInputStream:input] build];
}
+ (ProtocolOpenRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolOpenRequest*)[[[ProtocolOpenRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolOpenRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtocolOpenRequest*)[[[ProtocolOpenRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ProtocolOpenRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolOpenRequest*)[[[ProtocolOpenRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolOpenRequest_Builder*) builder {
  return [[[ProtocolOpenRequest_Builder alloc] init] autorelease];
}
+ (ProtocolOpenRequest_Builder*) builderWithPrototype:(ProtocolOpenRequest*) prototype {
  return [[ProtocolOpenRequest builder] mergeFrom:prototype];
}
- (ProtocolOpenRequest_Builder*) builder {
  return [ProtocolOpenRequest builder];
}
@end

@interface ProtocolOpenRequest_Builder()
@property (retain) ProtocolOpenRequest* result;
@end

@implementation ProtocolOpenRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProtocolOpenRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProtocolOpenRequest_Builder*) clear {
  self.result = [[[ProtocolOpenRequest alloc] init] autorelease];
  return self;
}
- (ProtocolOpenRequest_Builder*) clone {
  return [ProtocolOpenRequest builderWithPrototype:result];
}
- (ProtocolOpenRequest*) defaultInstance {
  return [ProtocolOpenRequest defaultInstance];
}
- (ProtocolOpenRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtocolOpenRequest*) buildPartial {
  ProtocolOpenRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProtocolOpenRequest_Builder*) mergeFrom:(ProtocolOpenRequest*) other {
  if (other == [ProtocolOpenRequest defaultInstance]) {
    return self;
  }
  if (other.hasParticipantId) {
    [self setParticipantId:other.participantId];
  }
  if (other.hasWaveId) {
    [self setWaveId:other.waveId];
  }
  if (other.mutableWaveletIdPrefixList.count > 0) {
    if (result.mutableWaveletIdPrefixList == nil) {
      result.mutableWaveletIdPrefixList = [NSMutableArray array];
    }
    [result.mutableWaveletIdPrefixList addObjectsFromArray:other.mutableWaveletIdPrefixList];
  }
  if (other.hasMaximumWavelets) {
    [self setMaximumWavelets:other.maximumWavelets];
  }
  if (other.hasSnapshots) {
    [self setSnapshots:other.snapshots];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtocolOpenRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtocolOpenRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setParticipantId:[input readString]];
        break;
      }
      case 18: {
        [self setWaveId:[input readString]];
        break;
      }
      case 26: {
        [self addWaveletIdPrefix:[input readString]];
        break;
      }
      case 32: {
        [self setMaximumWavelets:[input readInt32]];
        break;
      }
      case 40: {
        [self setSnapshots:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasParticipantId {
  return result.hasParticipantId;
}
- (NSString*) participantId {
  return result.participantId;
}
- (ProtocolOpenRequest_Builder*) setParticipantId:(NSString*) value {
  result.hasParticipantId = YES;
  result.participantId = value;
  return self;
}
- (ProtocolOpenRequest_Builder*) clearParticipantId {
  result.hasParticipantId = NO;
  result.participantId = @"";
  return self;
}
- (BOOL) hasWaveId {
  return result.hasWaveId;
}
- (NSString*) waveId {
  return result.waveId;
}
- (ProtocolOpenRequest_Builder*) setWaveId:(NSString*) value {
  result.hasWaveId = YES;
  result.waveId = value;
  return self;
}
- (ProtocolOpenRequest_Builder*) clearWaveId {
  result.hasWaveId = NO;
  result.waveId = @"";
  return self;
}
- (NSArray*) waveletIdPrefixList {
  if (result.mutableWaveletIdPrefixList == nil) {
    return [NSArray array];
  }
  return result.mutableWaveletIdPrefixList;
}
- (NSString*) waveletIdPrefixAtIndex:(int32_t) index {
  return [result waveletIdPrefixAtIndex:index];
}
- (ProtocolOpenRequest_Builder*) replaceWaveletIdPrefixAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableWaveletIdPrefixList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ProtocolOpenRequest_Builder*) addWaveletIdPrefix:(NSString*) value {
  if (result.mutableWaveletIdPrefixList == nil) {
    result.mutableWaveletIdPrefixList = [NSMutableArray array];
  }
  [result.mutableWaveletIdPrefixList addObject:value];
  return self;
}
- (ProtocolOpenRequest_Builder*) addAllWaveletIdPrefix:(NSArray*) values {
  if (result.mutableWaveletIdPrefixList == nil) {
    result.mutableWaveletIdPrefixList = [NSMutableArray array];
  }
  [result.mutableWaveletIdPrefixList addObjectsFromArray:values];
  return self;
}
- (ProtocolOpenRequest_Builder*) clearWaveletIdPrefixList {
  result.mutableWaveletIdPrefixList = nil;
  return self;
}
- (BOOL) hasMaximumWavelets {
  return result.hasMaximumWavelets;
}
- (int32_t) maximumWavelets {
  return result.maximumWavelets;
}
- (ProtocolOpenRequest_Builder*) setMaximumWavelets:(int32_t) value {
  result.hasMaximumWavelets = YES;
  result.maximumWavelets = value;
  return self;
}
- (ProtocolOpenRequest_Builder*) clearMaximumWavelets {
  result.hasMaximumWavelets = NO;
  result.maximumWavelets = 0;
  return self;
}
- (BOOL) hasSnapshots {
  return result.hasSnapshots;
}
- (BOOL) snapshots {
  return result.snapshots;
}
- (ProtocolOpenRequest_Builder*) setSnapshots:(BOOL) value {
  result.hasSnapshots = YES;
  result.snapshots = value;
  return self;
}
- (ProtocolOpenRequest_Builder*) clearSnapshots {
  result.hasSnapshots = NO;
  result.snapshots = NO;
  return self;
}
@end

@interface WaveletSnapshot ()
@property (retain) NSMutableArray* mutableParticipantIdList;
@property (retain) NSMutableArray* mutableDocumentList;
@end

@implementation WaveletSnapshot

@synthesize mutableParticipantIdList;
@synthesize mutableDocumentList;
- (void) dealloc {
  self.mutableParticipantIdList = nil;
  self.mutableDocumentList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static WaveletSnapshot* defaultWaveletSnapshotInstance = nil;
+ (void) initialize {
  if (self == [WaveletSnapshot class]) {
    defaultWaveletSnapshotInstance = [[WaveletSnapshot alloc] init];
  }
}
+ (WaveletSnapshot*) defaultInstance {
  return defaultWaveletSnapshotInstance;
}
- (WaveletSnapshot*) defaultInstance {
  return defaultWaveletSnapshotInstance;
}
- (NSArray*) participantIdList {
  return mutableParticipantIdList;
}
- (NSString*) participantIdAtIndex:(int32_t) index {
  id value = [mutableParticipantIdList objectAtIndex:index];
  return value;
}
- (NSArray*) documentList {
  return mutableDocumentList;
}
- (WaveletSnapshot_DocumentSnapshot*) documentAtIndex:(int32_t) index {
  id value = [mutableDocumentList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (WaveletSnapshot_DocumentSnapshot* element in self.documentList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSString* element in self.mutableParticipantIdList) {
    [output writeString:1 value:element];
  }
  for (WaveletSnapshot_DocumentSnapshot* element in self.documentList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableParticipantIdList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableParticipantIdList.count;
  }
  for (WaveletSnapshot_DocumentSnapshot* element in self.documentList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (WaveletSnapshot*) parseFromData:(NSData*) data {
  return (WaveletSnapshot*)[[[WaveletSnapshot builder] mergeFromData:data] build];
}
+ (WaveletSnapshot*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (WaveletSnapshot*)[[[WaveletSnapshot builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (WaveletSnapshot*) parseFromInputStream:(NSInputStream*) input {
  return (WaveletSnapshot*)[[[WaveletSnapshot builder] mergeFromInputStream:input] build];
}
+ (WaveletSnapshot*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (WaveletSnapshot*)[[[WaveletSnapshot builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (WaveletSnapshot*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (WaveletSnapshot*)[[[WaveletSnapshot builder] mergeFromCodedInputStream:input] build];
}
+ (WaveletSnapshot*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (WaveletSnapshot*)[[[WaveletSnapshot builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (WaveletSnapshot_Builder*) builder {
  return [[[WaveletSnapshot_Builder alloc] init] autorelease];
}
+ (WaveletSnapshot_Builder*) builderWithPrototype:(WaveletSnapshot*) prototype {
  return [[WaveletSnapshot builder] mergeFrom:prototype];
}
- (WaveletSnapshot_Builder*) builder {
  return [WaveletSnapshot builder];
}
@end

@interface WaveletSnapshot_DocumentSnapshot ()
@property (retain) NSString* documentId;
@property (retain) ProtocolDocumentOperation* documentOperation;
@end

@implementation WaveletSnapshot_DocumentSnapshot

- (BOOL) hasDocumentId {
  return !!hasDocumentId_;
}
- (void) setHasDocumentId:(BOOL) value {
  hasDocumentId_ = !!value;
}
@synthesize documentId;
- (BOOL) hasDocumentOperation {
  return !!hasDocumentOperation_;
}
- (void) setHasDocumentOperation:(BOOL) value {
  hasDocumentOperation_ = !!value;
}
@synthesize documentOperation;
- (void) dealloc {
  self.documentId = nil;
  self.documentOperation = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.documentId = @"";
    self.documentOperation = [ProtocolDocumentOperation defaultInstance];
  }
  return self;
}
static WaveletSnapshot_DocumentSnapshot* defaultWaveletSnapshot_DocumentSnapshotInstance = nil;
+ (void) initialize {
  if (self == [WaveletSnapshot_DocumentSnapshot class]) {
    defaultWaveletSnapshot_DocumentSnapshotInstance = [[WaveletSnapshot_DocumentSnapshot alloc] init];
  }
}
+ (WaveletSnapshot_DocumentSnapshot*) defaultInstance {
  return defaultWaveletSnapshot_DocumentSnapshotInstance;
}
- (WaveletSnapshot_DocumentSnapshot*) defaultInstance {
  return defaultWaveletSnapshot_DocumentSnapshotInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDocumentId) {
    return NO;
  }
  if (!self.hasDocumentOperation) {
    return NO;
  }
  if (!self.documentOperation.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDocumentId) {
    [output writeString:1 value:self.documentId];
  }
  if (self.hasDocumentOperation) {
    [output writeMessage:2 value:self.documentOperation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDocumentId) {
    size += computeStringSize(1, self.documentId);
  }
  if (self.hasDocumentOperation) {
    size += computeMessageSize(2, self.documentOperation);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (WaveletSnapshot_DocumentSnapshot*) parseFromData:(NSData*) data {
  return (WaveletSnapshot_DocumentSnapshot*)[[[WaveletSnapshot_DocumentSnapshot builder] mergeFromData:data] build];
}
+ (WaveletSnapshot_DocumentSnapshot*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (WaveletSnapshot_DocumentSnapshot*)[[[WaveletSnapshot_DocumentSnapshot builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (WaveletSnapshot_DocumentSnapshot*) parseFromInputStream:(NSInputStream*) input {
  return (WaveletSnapshot_DocumentSnapshot*)[[[WaveletSnapshot_DocumentSnapshot builder] mergeFromInputStream:input] build];
}
+ (WaveletSnapshot_DocumentSnapshot*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (WaveletSnapshot_DocumentSnapshot*)[[[WaveletSnapshot_DocumentSnapshot builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (WaveletSnapshot_DocumentSnapshot*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (WaveletSnapshot_DocumentSnapshot*)[[[WaveletSnapshot_DocumentSnapshot builder] mergeFromCodedInputStream:input] build];
}
+ (WaveletSnapshot_DocumentSnapshot*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (WaveletSnapshot_DocumentSnapshot*)[[[WaveletSnapshot_DocumentSnapshot builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (WaveletSnapshot_DocumentSnapshot_Builder*) builder {
  return [[[WaveletSnapshot_DocumentSnapshot_Builder alloc] init] autorelease];
}
+ (WaveletSnapshot_DocumentSnapshot_Builder*) builderWithPrototype:(WaveletSnapshot_DocumentSnapshot*) prototype {
  return [[WaveletSnapshot_DocumentSnapshot builder] mergeFrom:prototype];
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) builder {
  return [WaveletSnapshot_DocumentSnapshot builder];
}
@end

@interface WaveletSnapshot_DocumentSnapshot_Builder()
@property (retain) WaveletSnapshot_DocumentSnapshot* result;
@end

@implementation WaveletSnapshot_DocumentSnapshot_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[WaveletSnapshot_DocumentSnapshot alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) clear {
  self.result = [[[WaveletSnapshot_DocumentSnapshot alloc] init] autorelease];
  return self;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) clone {
  return [WaveletSnapshot_DocumentSnapshot builderWithPrototype:result];
}
- (WaveletSnapshot_DocumentSnapshot*) defaultInstance {
  return [WaveletSnapshot_DocumentSnapshot defaultInstance];
}
- (WaveletSnapshot_DocumentSnapshot*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (WaveletSnapshot_DocumentSnapshot*) buildPartial {
  WaveletSnapshot_DocumentSnapshot* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) mergeFrom:(WaveletSnapshot_DocumentSnapshot*) other {
  if (other == [WaveletSnapshot_DocumentSnapshot defaultInstance]) {
    return self;
  }
  if (other.hasDocumentId) {
    [self setDocumentId:other.documentId];
  }
  if (other.hasDocumentOperation) {
    [self mergeDocumentOperation:other.documentOperation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDocumentId:[input readString]];
        break;
      }
      case 18: {
        ProtocolDocumentOperation_Builder* subBuilder = [ProtocolDocumentOperation builder];
        if (self.hasDocumentOperation) {
          [subBuilder mergeFrom:self.documentOperation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDocumentOperation:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDocumentId {
  return result.hasDocumentId;
}
- (NSString*) documentId {
  return result.documentId;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) setDocumentId:(NSString*) value {
  result.hasDocumentId = YES;
  result.documentId = value;
  return self;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) clearDocumentId {
  result.hasDocumentId = NO;
  result.documentId = @"";
  return self;
}
- (BOOL) hasDocumentOperation {
  return result.hasDocumentOperation;
}
- (ProtocolDocumentOperation*) documentOperation {
  return result.documentOperation;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) setDocumentOperation:(ProtocolDocumentOperation*) value {
  result.hasDocumentOperation = YES;
  result.documentOperation = value;
  return self;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) setDocumentOperationBuilder:(ProtocolDocumentOperation_Builder*) builderForValue {
  return [self setDocumentOperation:[builderForValue build]];
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) mergeDocumentOperation:(ProtocolDocumentOperation*) value {
  if (result.hasDocumentOperation &&
      result.documentOperation != [ProtocolDocumentOperation defaultInstance]) {
    result.documentOperation =
      [[[ProtocolDocumentOperation builderWithPrototype:result.documentOperation] mergeFrom:value] buildPartial];
  } else {
    result.documentOperation = value;
  }
  result.hasDocumentOperation = YES;
  return self;
}
- (WaveletSnapshot_DocumentSnapshot_Builder*) clearDocumentOperation {
  result.hasDocumentOperation = NO;
  result.documentOperation = [ProtocolDocumentOperation defaultInstance];
  return self;
}
@end

@interface WaveletSnapshot_Builder()
@property (retain) WaveletSnapshot* result;
@end

@implementation WaveletSnapshot_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[WaveletSnapshot alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (WaveletSnapshot_Builder*) clear {
  self.result = [[[WaveletSnapshot alloc] init] autorelease];
  return self;
}
- (WaveletSnapshot_Builder*) clone {
  return [WaveletSnapshot builderWithPrototype:result];
}
- (WaveletSnapshot*) defaultInstance {
  return [WaveletSnapshot defaultInstance];
}
- (WaveletSnapshot*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (WaveletSnapshot*) buildPartial {
  WaveletSnapshot* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (WaveletSnapshot_Builder*) mergeFrom:(WaveletSnapshot*) other {
  if (other == [WaveletSnapshot defaultInstance]) {
    return self;
  }
  if (other.mutableParticipantIdList.count > 0) {
    if (result.mutableParticipantIdList == nil) {
      result.mutableParticipantIdList = [NSMutableArray array];
    }
    [result.mutableParticipantIdList addObjectsFromArray:other.mutableParticipantIdList];
  }
  if (other.mutableDocumentList.count > 0) {
    if (result.mutableDocumentList == nil) {
      result.mutableDocumentList = [NSMutableArray array];
    }
    [result.mutableDocumentList addObjectsFromArray:other.mutableDocumentList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (WaveletSnapshot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (WaveletSnapshot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addParticipantId:[input readString]];
        break;
      }
      case 18: {
        WaveletSnapshot_DocumentSnapshot_Builder* subBuilder = [WaveletSnapshot_DocumentSnapshot builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDocument:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) participantIdList {
  if (result.mutableParticipantIdList == nil) {
    return [NSArray array];
  }
  return result.mutableParticipantIdList;
}
- (NSString*) participantIdAtIndex:(int32_t) index {
  return [result participantIdAtIndex:index];
}
- (WaveletSnapshot_Builder*) replaceParticipantIdAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableParticipantIdList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (WaveletSnapshot_Builder*) addParticipantId:(NSString*) value {
  if (result.mutableParticipantIdList == nil) {
    result.mutableParticipantIdList = [NSMutableArray array];
  }
  [result.mutableParticipantIdList addObject:value];
  return self;
}
- (WaveletSnapshot_Builder*) addAllParticipantId:(NSArray*) values {
  if (result.mutableParticipantIdList == nil) {
    result.mutableParticipantIdList = [NSMutableArray array];
  }
  [result.mutableParticipantIdList addObjectsFromArray:values];
  return self;
}
- (WaveletSnapshot_Builder*) clearParticipantIdList {
  result.mutableParticipantIdList = nil;
  return self;
}
- (NSArray*) documentList {
  if (result.mutableDocumentList == nil) { return [NSArray array]; }
  return result.mutableDocumentList;
}
- (WaveletSnapshot_DocumentSnapshot*) documentAtIndex:(int32_t) index {
  return [result documentAtIndex:index];
}
- (WaveletSnapshot_Builder*) replaceDocumentAtIndex:(int32_t) index with:(WaveletSnapshot_DocumentSnapshot*) value {
  [result.mutableDocumentList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (WaveletSnapshot_Builder*) addAllDocument:(NSArray*) values {
  if (result.mutableDocumentList == nil) {
    result.mutableDocumentList = [NSMutableArray array];
  }
  [result.mutableDocumentList addObjectsFromArray:values];
  return self;
}
- (WaveletSnapshot_Builder*) clearDocumentList {
  result.mutableDocumentList = nil;
  return self;
}
- (WaveletSnapshot_Builder*) addDocument:(WaveletSnapshot_DocumentSnapshot*) value {
  if (result.mutableDocumentList == nil) {
    result.mutableDocumentList = [NSMutableArray array];
  }
  [result.mutableDocumentList addObject:value];
  return self;
}
@end

@interface ProtocolWaveletUpdate ()
@property (retain) NSString* waveletName;
@property (retain) NSMutableArray* mutableAppliedDeltaList;
@property (retain) ProtocolHashedVersion* commitNotice;
@property (retain) ProtocolHashedVersion* resultingVersion;
@property (retain) WaveletSnapshot* snapshot;
@end

@implementation ProtocolWaveletUpdate

- (BOOL) hasWaveletName {
  return !!hasWaveletName_;
}
- (void) setHasWaveletName:(BOOL) value {
  hasWaveletName_ = !!value;
}
@synthesize waveletName;
@synthesize mutableAppliedDeltaList;
- (BOOL) hasCommitNotice {
  return !!hasCommitNotice_;
}
- (void) setHasCommitNotice:(BOOL) value {
  hasCommitNotice_ = !!value;
}
@synthesize commitNotice;
- (BOOL) hasResultingVersion {
  return !!hasResultingVersion_;
}
- (void) setHasResultingVersion:(BOOL) value {
  hasResultingVersion_ = !!value;
}
@synthesize resultingVersion;
- (BOOL) hasSnapshot {
  return !!hasSnapshot_;
}
- (void) setHasSnapshot:(BOOL) value {
  hasSnapshot_ = !!value;
}
@synthesize snapshot;
- (void) dealloc {
  self.waveletName = nil;
  self.mutableAppliedDeltaList = nil;
  self.commitNotice = nil;
  self.resultingVersion = nil;
  self.snapshot = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.waveletName = @"";
    self.commitNotice = [ProtocolHashedVersion defaultInstance];
    self.resultingVersion = [ProtocolHashedVersion defaultInstance];
    self.snapshot = [WaveletSnapshot defaultInstance];
  }
  return self;
}
static ProtocolWaveletUpdate* defaultProtocolWaveletUpdateInstance = nil;
+ (void) initialize {
  if (self == [ProtocolWaveletUpdate class]) {
    defaultProtocolWaveletUpdateInstance = [[ProtocolWaveletUpdate alloc] init];
  }
}
+ (ProtocolWaveletUpdate*) defaultInstance {
  return defaultProtocolWaveletUpdateInstance;
}
- (ProtocolWaveletUpdate*) defaultInstance {
  return defaultProtocolWaveletUpdateInstance;
}
- (NSArray*) appliedDeltaList {
  return mutableAppliedDeltaList;
}
- (ProtocolWaveletDelta*) appliedDeltaAtIndex:(int32_t) index {
  id value = [mutableAppliedDeltaList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasWaveletName) {
    return NO;
  }
  for (ProtocolWaveletDelta* element in self.appliedDeltaList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasCommitNotice) {
    if (!self.commitNotice.isInitialized) {
      return NO;
    }
  }
  if (self.hasResultingVersion) {
    if (!self.resultingVersion.isInitialized) {
      return NO;
    }
  }
  if (self.hasSnapshot) {
    if (!self.snapshot.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasWaveletName) {
    [output writeString:1 value:self.waveletName];
  }
  for (ProtocolWaveletDelta* element in self.appliedDeltaList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasCommitNotice) {
    [output writeMessage:3 value:self.commitNotice];
  }
  if (self.hasResultingVersion) {
    [output writeMessage:4 value:self.resultingVersion];
  }
  if (self.hasSnapshot) {
    [output writeMessage:5 value:self.snapshot];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasWaveletName) {
    size += computeStringSize(1, self.waveletName);
  }
  for (ProtocolWaveletDelta* element in self.appliedDeltaList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasCommitNotice) {
    size += computeMessageSize(3, self.commitNotice);
  }
  if (self.hasResultingVersion) {
    size += computeMessageSize(4, self.resultingVersion);
  }
  if (self.hasSnapshot) {
    size += computeMessageSize(5, self.snapshot);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProtocolWaveletUpdate*) parseFromData:(NSData*) data {
  return (ProtocolWaveletUpdate*)[[[ProtocolWaveletUpdate builder] mergeFromData:data] build];
}
+ (ProtocolWaveletUpdate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolWaveletUpdate*)[[[ProtocolWaveletUpdate builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtocolWaveletUpdate*) parseFromInputStream:(NSInputStream*) input {
  return (ProtocolWaveletUpdate*)[[[ProtocolWaveletUpdate builder] mergeFromInputStream:input] build];
}
+ (ProtocolWaveletUpdate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolWaveletUpdate*)[[[ProtocolWaveletUpdate builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolWaveletUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtocolWaveletUpdate*)[[[ProtocolWaveletUpdate builder] mergeFromCodedInputStream:input] build];
}
+ (ProtocolWaveletUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolWaveletUpdate*)[[[ProtocolWaveletUpdate builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolWaveletUpdate_Builder*) builder {
  return [[[ProtocolWaveletUpdate_Builder alloc] init] autorelease];
}
+ (ProtocolWaveletUpdate_Builder*) builderWithPrototype:(ProtocolWaveletUpdate*) prototype {
  return [[ProtocolWaveletUpdate builder] mergeFrom:prototype];
}
- (ProtocolWaveletUpdate_Builder*) builder {
  return [ProtocolWaveletUpdate builder];
}
@end

@interface ProtocolWaveletUpdate_Builder()
@property (retain) ProtocolWaveletUpdate* result;
@end

@implementation ProtocolWaveletUpdate_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProtocolWaveletUpdate alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProtocolWaveletUpdate_Builder*) clear {
  self.result = [[[ProtocolWaveletUpdate alloc] init] autorelease];
  return self;
}
- (ProtocolWaveletUpdate_Builder*) clone {
  return [ProtocolWaveletUpdate builderWithPrototype:result];
}
- (ProtocolWaveletUpdate*) defaultInstance {
  return [ProtocolWaveletUpdate defaultInstance];
}
- (ProtocolWaveletUpdate*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtocolWaveletUpdate*) buildPartial {
  ProtocolWaveletUpdate* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProtocolWaveletUpdate_Builder*) mergeFrom:(ProtocolWaveletUpdate*) other {
  if (other == [ProtocolWaveletUpdate defaultInstance]) {
    return self;
  }
  if (other.hasWaveletName) {
    [self setWaveletName:other.waveletName];
  }
  if (other.mutableAppliedDeltaList.count > 0) {
    if (result.mutableAppliedDeltaList == nil) {
      result.mutableAppliedDeltaList = [NSMutableArray array];
    }
    [result.mutableAppliedDeltaList addObjectsFromArray:other.mutableAppliedDeltaList];
  }
  if (other.hasCommitNotice) {
    [self mergeCommitNotice:other.commitNotice];
  }
  if (other.hasResultingVersion) {
    [self mergeResultingVersion:other.resultingVersion];
  }
  if (other.hasSnapshot) {
    [self mergeSnapshot:other.snapshot];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtocolWaveletUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtocolWaveletUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setWaveletName:[input readString]];
        break;
      }
      case 18: {
        ProtocolWaveletDelta_Builder* subBuilder = [ProtocolWaveletDelta builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAppliedDelta:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        ProtocolHashedVersion_Builder* subBuilder = [ProtocolHashedVersion builder];
        if (self.hasCommitNotice) {
          [subBuilder mergeFrom:self.commitNotice];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCommitNotice:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        ProtocolHashedVersion_Builder* subBuilder = [ProtocolHashedVersion builder];
        if (self.hasResultingVersion) {
          [subBuilder mergeFrom:self.resultingVersion];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResultingVersion:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        WaveletSnapshot_Builder* subBuilder = [WaveletSnapshot builder];
        if (self.hasSnapshot) {
          [subBuilder mergeFrom:self.snapshot];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSnapshot:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasWaveletName {
  return result.hasWaveletName;
}
- (NSString*) waveletName {
  return result.waveletName;
}
- (ProtocolWaveletUpdate_Builder*) setWaveletName:(NSString*) value {
  result.hasWaveletName = YES;
  result.waveletName = value;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) clearWaveletName {
  result.hasWaveletName = NO;
  result.waveletName = @"";
  return self;
}
- (NSArray*) appliedDeltaList {
  if (result.mutableAppliedDeltaList == nil) { return [NSArray array]; }
  return result.mutableAppliedDeltaList;
}
- (ProtocolWaveletDelta*) appliedDeltaAtIndex:(int32_t) index {
  return [result appliedDeltaAtIndex:index];
}
- (ProtocolWaveletUpdate_Builder*) replaceAppliedDeltaAtIndex:(int32_t) index with:(ProtocolWaveletDelta*) value {
  [result.mutableAppliedDeltaList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ProtocolWaveletUpdate_Builder*) addAllAppliedDelta:(NSArray*) values {
  if (result.mutableAppliedDeltaList == nil) {
    result.mutableAppliedDeltaList = [NSMutableArray array];
  }
  [result.mutableAppliedDeltaList addObjectsFromArray:values];
  return self;
}
- (ProtocolWaveletUpdate_Builder*) clearAppliedDeltaList {
  result.mutableAppliedDeltaList = nil;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) addAppliedDelta:(ProtocolWaveletDelta*) value {
  if (result.mutableAppliedDeltaList == nil) {
    result.mutableAppliedDeltaList = [NSMutableArray array];
  }
  [result.mutableAppliedDeltaList addObject:value];
  return self;
}
- (BOOL) hasCommitNotice {
  return result.hasCommitNotice;
}
- (ProtocolHashedVersion*) commitNotice {
  return result.commitNotice;
}
- (ProtocolWaveletUpdate_Builder*) setCommitNotice:(ProtocolHashedVersion*) value {
  result.hasCommitNotice = YES;
  result.commitNotice = value;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) setCommitNoticeBuilder:(ProtocolHashedVersion_Builder*) builderForValue {
  return [self setCommitNotice:[builderForValue build]];
}
- (ProtocolWaveletUpdate_Builder*) mergeCommitNotice:(ProtocolHashedVersion*) value {
  if (result.hasCommitNotice &&
      result.commitNotice != [ProtocolHashedVersion defaultInstance]) {
    result.commitNotice =
      [[[ProtocolHashedVersion builderWithPrototype:result.commitNotice] mergeFrom:value] buildPartial];
  } else {
    result.commitNotice = value;
  }
  result.hasCommitNotice = YES;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) clearCommitNotice {
  result.hasCommitNotice = NO;
  result.commitNotice = [ProtocolHashedVersion defaultInstance];
  return self;
}
- (BOOL) hasResultingVersion {
  return result.hasResultingVersion;
}
- (ProtocolHashedVersion*) resultingVersion {
  return result.resultingVersion;
}
- (ProtocolWaveletUpdate_Builder*) setResultingVersion:(ProtocolHashedVersion*) value {
  result.hasResultingVersion = YES;
  result.resultingVersion = value;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) setResultingVersionBuilder:(ProtocolHashedVersion_Builder*) builderForValue {
  return [self setResultingVersion:[builderForValue build]];
}
- (ProtocolWaveletUpdate_Builder*) mergeResultingVersion:(ProtocolHashedVersion*) value {
  if (result.hasResultingVersion &&
      result.resultingVersion != [ProtocolHashedVersion defaultInstance]) {
    result.resultingVersion =
      [[[ProtocolHashedVersion builderWithPrototype:result.resultingVersion] mergeFrom:value] buildPartial];
  } else {
    result.resultingVersion = value;
  }
  result.hasResultingVersion = YES;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) clearResultingVersion {
  result.hasResultingVersion = NO;
  result.resultingVersion = [ProtocolHashedVersion defaultInstance];
  return self;
}
- (BOOL) hasSnapshot {
  return result.hasSnapshot;
}
- (WaveletSnapshot*) snapshot {
  return result.snapshot;
}
- (ProtocolWaveletUpdate_Builder*) setSnapshot:(WaveletSnapshot*) value {
  result.hasSnapshot = YES;
  result.snapshot = value;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) setSnapshotBuilder:(WaveletSnapshot_Builder*) builderForValue {
  return [self setSnapshot:[builderForValue build]];
}
- (ProtocolWaveletUpdate_Builder*) mergeSnapshot:(WaveletSnapshot*) value {
  if (result.hasSnapshot &&
      result.snapshot != [WaveletSnapshot defaultInstance]) {
    result.snapshot =
      [[[WaveletSnapshot builderWithPrototype:result.snapshot] mergeFrom:value] buildPartial];
  } else {
    result.snapshot = value;
  }
  result.hasSnapshot = YES;
  return self;
}
- (ProtocolWaveletUpdate_Builder*) clearSnapshot {
  result.hasSnapshot = NO;
  result.snapshot = [WaveletSnapshot defaultInstance];
  return self;
}
@end

@interface ProtocolSubmitRequest ()
@property (retain) NSString* waveletName;
@property (retain) ProtocolWaveletDelta* delta;
@end

@implementation ProtocolSubmitRequest

- (BOOL) hasWaveletName {
  return !!hasWaveletName_;
}
- (void) setHasWaveletName:(BOOL) value {
  hasWaveletName_ = !!value;
}
@synthesize waveletName;
- (BOOL) hasDelta {
  return !!hasDelta_;
}
- (void) setHasDelta:(BOOL) value {
  hasDelta_ = !!value;
}
@synthesize delta;
- (void) dealloc {
  self.waveletName = nil;
  self.delta = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.waveletName = @"";
    self.delta = [ProtocolWaveletDelta defaultInstance];
  }
  return self;
}
static ProtocolSubmitRequest* defaultProtocolSubmitRequestInstance = nil;
+ (void) initialize {
  if (self == [ProtocolSubmitRequest class]) {
    defaultProtocolSubmitRequestInstance = [[ProtocolSubmitRequest alloc] init];
  }
}
+ (ProtocolSubmitRequest*) defaultInstance {
  return defaultProtocolSubmitRequestInstance;
}
- (ProtocolSubmitRequest*) defaultInstance {
  return defaultProtocolSubmitRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasWaveletName) {
    return NO;
  }
  if (!self.hasDelta) {
    return NO;
  }
  if (!self.delta.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasWaveletName) {
    [output writeString:1 value:self.waveletName];
  }
  if (self.hasDelta) {
    [output writeMessage:2 value:self.delta];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasWaveletName) {
    size += computeStringSize(1, self.waveletName);
  }
  if (self.hasDelta) {
    size += computeMessageSize(2, self.delta);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProtocolSubmitRequest*) parseFromData:(NSData*) data {
  return (ProtocolSubmitRequest*)[[[ProtocolSubmitRequest builder] mergeFromData:data] build];
}
+ (ProtocolSubmitRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolSubmitRequest*)[[[ProtocolSubmitRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtocolSubmitRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ProtocolSubmitRequest*)[[[ProtocolSubmitRequest builder] mergeFromInputStream:input] build];
}
+ (ProtocolSubmitRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolSubmitRequest*)[[[ProtocolSubmitRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolSubmitRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtocolSubmitRequest*)[[[ProtocolSubmitRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ProtocolSubmitRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolSubmitRequest*)[[[ProtocolSubmitRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolSubmitRequest_Builder*) builder {
  return [[[ProtocolSubmitRequest_Builder alloc] init] autorelease];
}
+ (ProtocolSubmitRequest_Builder*) builderWithPrototype:(ProtocolSubmitRequest*) prototype {
  return [[ProtocolSubmitRequest builder] mergeFrom:prototype];
}
- (ProtocolSubmitRequest_Builder*) builder {
  return [ProtocolSubmitRequest builder];
}
@end

@interface ProtocolSubmitRequest_Builder()
@property (retain) ProtocolSubmitRequest* result;
@end

@implementation ProtocolSubmitRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProtocolSubmitRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProtocolSubmitRequest_Builder*) clear {
  self.result = [[[ProtocolSubmitRequest alloc] init] autorelease];
  return self;
}
- (ProtocolSubmitRequest_Builder*) clone {
  return [ProtocolSubmitRequest builderWithPrototype:result];
}
- (ProtocolSubmitRequest*) defaultInstance {
  return [ProtocolSubmitRequest defaultInstance];
}
- (ProtocolSubmitRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtocolSubmitRequest*) buildPartial {
  ProtocolSubmitRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProtocolSubmitRequest_Builder*) mergeFrom:(ProtocolSubmitRequest*) other {
  if (other == [ProtocolSubmitRequest defaultInstance]) {
    return self;
  }
  if (other.hasWaveletName) {
    [self setWaveletName:other.waveletName];
  }
  if (other.hasDelta) {
    [self mergeDelta:other.delta];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtocolSubmitRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtocolSubmitRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setWaveletName:[input readString]];
        break;
      }
      case 18: {
        ProtocolWaveletDelta_Builder* subBuilder = [ProtocolWaveletDelta builder];
        if (self.hasDelta) {
          [subBuilder mergeFrom:self.delta];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDelta:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasWaveletName {
  return result.hasWaveletName;
}
- (NSString*) waveletName {
  return result.waveletName;
}
- (ProtocolSubmitRequest_Builder*) setWaveletName:(NSString*) value {
  result.hasWaveletName = YES;
  result.waveletName = value;
  return self;
}
- (ProtocolSubmitRequest_Builder*) clearWaveletName {
  result.hasWaveletName = NO;
  result.waveletName = @"";
  return self;
}
- (BOOL) hasDelta {
  return result.hasDelta;
}
- (ProtocolWaveletDelta*) delta {
  return result.delta;
}
- (ProtocolSubmitRequest_Builder*) setDelta:(ProtocolWaveletDelta*) value {
  result.hasDelta = YES;
  result.delta = value;
  return self;
}
- (ProtocolSubmitRequest_Builder*) setDeltaBuilder:(ProtocolWaveletDelta_Builder*) builderForValue {
  return [self setDelta:[builderForValue build]];
}
- (ProtocolSubmitRequest_Builder*) mergeDelta:(ProtocolWaveletDelta*) value {
  if (result.hasDelta &&
      result.delta != [ProtocolWaveletDelta defaultInstance]) {
    result.delta =
      [[[ProtocolWaveletDelta builderWithPrototype:result.delta] mergeFrom:value] buildPartial];
  } else {
    result.delta = value;
  }
  result.hasDelta = YES;
  return self;
}
- (ProtocolSubmitRequest_Builder*) clearDelta {
  result.hasDelta = NO;
  result.delta = [ProtocolWaveletDelta defaultInstance];
  return self;
}
@end

@interface ProtocolSubmitResponse ()
@property int32_t operationsApplied;
@property (retain) NSString* errorMessage;
@property (retain) ProtocolHashedVersion* hashedVersionAfterApplication;
@end

@implementation ProtocolSubmitResponse

- (BOOL) hasOperationsApplied {
  return !!hasOperationsApplied_;
}
- (void) setHasOperationsApplied:(BOOL) value {
  hasOperationsApplied_ = !!value;
}
@synthesize operationsApplied;
- (BOOL) hasErrorMessage {
  return !!hasErrorMessage_;
}
- (void) setHasErrorMessage:(BOOL) value {
  hasErrorMessage_ = !!value;
}
@synthesize errorMessage;
- (BOOL) hasHashedVersionAfterApplication {
  return !!hasHashedVersionAfterApplication_;
}
- (void) setHasHashedVersionAfterApplication:(BOOL) value {
  hasHashedVersionAfterApplication_ = !!value;
}
@synthesize hashedVersionAfterApplication;
- (void) dealloc {
  self.errorMessage = nil;
  self.hashedVersionAfterApplication = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.operationsApplied = 0;
    self.errorMessage = @"";
    self.hashedVersionAfterApplication = [ProtocolHashedVersion defaultInstance];
  }
  return self;
}
static ProtocolSubmitResponse* defaultProtocolSubmitResponseInstance = nil;
+ (void) initialize {
  if (self == [ProtocolSubmitResponse class]) {
    defaultProtocolSubmitResponseInstance = [[ProtocolSubmitResponse alloc] init];
  }
}
+ (ProtocolSubmitResponse*) defaultInstance {
  return defaultProtocolSubmitResponseInstance;
}
- (ProtocolSubmitResponse*) defaultInstance {
  return defaultProtocolSubmitResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOperationsApplied) {
    return NO;
  }
  if (self.hasHashedVersionAfterApplication) {
    if (!self.hashedVersionAfterApplication.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOperationsApplied) {
    [output writeInt32:1 value:self.operationsApplied];
  }
  if (self.hasErrorMessage) {
    [output writeString:2 value:self.errorMessage];
  }
  if (self.hasHashedVersionAfterApplication) {
    [output writeMessage:3 value:self.hashedVersionAfterApplication];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOperationsApplied) {
    size += computeInt32Size(1, self.operationsApplied);
  }
  if (self.hasErrorMessage) {
    size += computeStringSize(2, self.errorMessage);
  }
  if (self.hasHashedVersionAfterApplication) {
    size += computeMessageSize(3, self.hashedVersionAfterApplication);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProtocolSubmitResponse*) parseFromData:(NSData*) data {
  return (ProtocolSubmitResponse*)[[[ProtocolSubmitResponse builder] mergeFromData:data] build];
}
+ (ProtocolSubmitResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolSubmitResponse*)[[[ProtocolSubmitResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtocolSubmitResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ProtocolSubmitResponse*)[[[ProtocolSubmitResponse builder] mergeFromInputStream:input] build];
}
+ (ProtocolSubmitResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolSubmitResponse*)[[[ProtocolSubmitResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolSubmitResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtocolSubmitResponse*)[[[ProtocolSubmitResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ProtocolSubmitResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtocolSubmitResponse*)[[[ProtocolSubmitResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtocolSubmitResponse_Builder*) builder {
  return [[[ProtocolSubmitResponse_Builder alloc] init] autorelease];
}
+ (ProtocolSubmitResponse_Builder*) builderWithPrototype:(ProtocolSubmitResponse*) prototype {
  return [[ProtocolSubmitResponse builder] mergeFrom:prototype];
}
- (ProtocolSubmitResponse_Builder*) builder {
  return [ProtocolSubmitResponse builder];
}
@end

@interface ProtocolSubmitResponse_Builder()
@property (retain) ProtocolSubmitResponse* result;
@end

@implementation ProtocolSubmitResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProtocolSubmitResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProtocolSubmitResponse_Builder*) clear {
  self.result = [[[ProtocolSubmitResponse alloc] init] autorelease];
  return self;
}
- (ProtocolSubmitResponse_Builder*) clone {
  return [ProtocolSubmitResponse builderWithPrototype:result];
}
- (ProtocolSubmitResponse*) defaultInstance {
  return [ProtocolSubmitResponse defaultInstance];
}
- (ProtocolSubmitResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtocolSubmitResponse*) buildPartial {
  ProtocolSubmitResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProtocolSubmitResponse_Builder*) mergeFrom:(ProtocolSubmitResponse*) other {
  if (other == [ProtocolSubmitResponse defaultInstance]) {
    return self;
  }
  if (other.hasOperationsApplied) {
    [self setOperationsApplied:other.operationsApplied];
  }
  if (other.hasErrorMessage) {
    [self setErrorMessage:other.errorMessage];
  }
  if (other.hasHashedVersionAfterApplication) {
    [self mergeHashedVersionAfterApplication:other.hashedVersionAfterApplication];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtocolSubmitResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtocolSubmitResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOperationsApplied:[input readInt32]];
        break;
      }
      case 18: {
        [self setErrorMessage:[input readString]];
        break;
      }
      case 26: {
        ProtocolHashedVersion_Builder* subBuilder = [ProtocolHashedVersion builder];
        if (self.hasHashedVersionAfterApplication) {
          [subBuilder mergeFrom:self.hashedVersionAfterApplication];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setHashedVersionAfterApplication:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasOperationsApplied {
  return result.hasOperationsApplied;
}
- (int32_t) operationsApplied {
  return result.operationsApplied;
}
- (ProtocolSubmitResponse_Builder*) setOperationsApplied:(int32_t) value {
  result.hasOperationsApplied = YES;
  result.operationsApplied = value;
  return self;
}
- (ProtocolSubmitResponse_Builder*) clearOperationsApplied {
  result.hasOperationsApplied = NO;
  result.operationsApplied = 0;
  return self;
}
- (BOOL) hasErrorMessage {
  return result.hasErrorMessage;
}
- (NSString*) errorMessage {
  return result.errorMessage;
}
- (ProtocolSubmitResponse_Builder*) setErrorMessage:(NSString*) value {
  result.hasErrorMessage = YES;
  result.errorMessage = value;
  return self;
}
- (ProtocolSubmitResponse_Builder*) clearErrorMessage {
  result.hasErrorMessage = NO;
  result.errorMessage = @"";
  return self;
}
- (BOOL) hasHashedVersionAfterApplication {
  return result.hasHashedVersionAfterApplication;
}
- (ProtocolHashedVersion*) hashedVersionAfterApplication {
  return result.hashedVersionAfterApplication;
}
- (ProtocolSubmitResponse_Builder*) setHashedVersionAfterApplication:(ProtocolHashedVersion*) value {
  result.hasHashedVersionAfterApplication = YES;
  result.hashedVersionAfterApplication = value;
  return self;
}
- (ProtocolSubmitResponse_Builder*) setHashedVersionAfterApplicationBuilder:(ProtocolHashedVersion_Builder*) builderForValue {
  return [self setHashedVersionAfterApplication:[builderForValue build]];
}
- (ProtocolSubmitResponse_Builder*) mergeHashedVersionAfterApplication:(ProtocolHashedVersion*) value {
  if (result.hasHashedVersionAfterApplication &&
      result.hashedVersionAfterApplication != [ProtocolHashedVersion defaultInstance]) {
    result.hashedVersionAfterApplication =
      [[[ProtocolHashedVersion builderWithPrototype:result.hashedVersionAfterApplication] mergeFrom:value] buildPartial];
  } else {
    result.hashedVersionAfterApplication = value;
  }
  result.hasHashedVersionAfterApplication = YES;
  return self;
}
- (ProtocolSubmitResponse_Builder*) clearHashedVersionAfterApplication {
  result.hasHashedVersionAfterApplication = NO;
  result.hashedVersionAfterApplication = [ProtocolHashedVersion defaultInstance];
  return self;
}
@end

