// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FederationError.pb.h"

@implementation FederationErrorRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FederationErrorRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FederationError ()
@property FederationError_Code errorCode;
@property (retain) NSString* errorMessage;
@end

@implementation FederationError

- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (BOOL) hasErrorMessage {
  return !!hasErrorMessage_;
}
- (void) setHasErrorMessage:(BOOL) value {
  hasErrorMessage_ = !!value;
}
@synthesize errorMessage;
- (void) dealloc {
  self.errorMessage = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.errorCode = FederationError_CodeOk;
    self.errorMessage = @"";
  }
  return self;
}
static FederationError* defaultFederationErrorInstance = nil;
+ (void) initialize {
  if (self == [FederationError class]) {
    defaultFederationErrorInstance = [[FederationError alloc] init];
  }
}
+ (FederationError*) defaultInstance {
  return defaultFederationErrorInstance;
}
- (FederationError*) defaultInstance {
  return defaultFederationErrorInstance;
}
- (BOOL) isInitialized {
  if (!self.hasErrorCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasErrorCode) {
    [output writeEnum:1 value:self.errorCode];
  }
  if (self.hasErrorMessage) {
    [output writeString:2 value:self.errorMessage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasErrorCode) {
    size += computeEnumSize(1, self.errorCode);
  }
  if (self.hasErrorMessage) {
    size += computeStringSize(2, self.errorMessage);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FederationError*) parseFromData:(NSData*) data {
  return (FederationError*)[[[FederationError builder] mergeFromData:data] build];
}
+ (FederationError*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FederationError*)[[[FederationError builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FederationError*) parseFromInputStream:(NSInputStream*) input {
  return (FederationError*)[[[FederationError builder] mergeFromInputStream:input] build];
}
+ (FederationError*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FederationError*)[[[FederationError builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FederationError*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FederationError*)[[[FederationError builder] mergeFromCodedInputStream:input] build];
}
+ (FederationError*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FederationError*)[[[FederationError builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FederationError_Builder*) builder {
  return [[[FederationError_Builder alloc] init] autorelease];
}
+ (FederationError_Builder*) builderWithPrototype:(FederationError*) prototype {
  return [[FederationError builder] mergeFrom:prototype];
}
- (FederationError_Builder*) builder {
  return [FederationError builder];
}
@end

BOOL FederationError_CodeIsValidValue(FederationError_Code value) {
  switch (value) {
    case FederationError_CodeOk:
    case FederationError_CodeBadRequest:
    case FederationError_CodeItemNotFound:
    case FederationError_CodeNotAcceptable:
    case FederationError_CodeNotAuthorized:
    case FederationError_CodeResourceConstraint:
    case FederationError_CodeUndefinedCondition:
    case FederationError_CodeRemoteServerTimeout:
    case FederationError_CodeUnexpectedRequest:
      return YES;
    default:
      return NO;
  }
}
@interface FederationError_Builder()
@property (retain) FederationError* result;
@end

@implementation FederationError_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FederationError alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FederationError_Builder*) clear {
  self.result = [[[FederationError alloc] init] autorelease];
  return self;
}
- (FederationError_Builder*) clone {
  return [FederationError builderWithPrototype:result];
}
- (FederationError*) defaultInstance {
  return [FederationError defaultInstance];
}
- (FederationError*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FederationError*) buildPartial {
  FederationError* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FederationError_Builder*) mergeFrom:(FederationError*) other {
  if (other == [FederationError defaultInstance]) {
    return self;
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  if (other.hasErrorMessage) {
    [self setErrorMessage:other.errorMessage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FederationError_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FederationError_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (FederationError_CodeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setErrorMessage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (FederationError_Code) errorCode {
  return result.errorCode;
}
- (FederationError_Builder*) setErrorCode:(FederationError_Code) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (FederationError_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = FederationError_CodeOk;
  return self;
}
- (BOOL) hasErrorMessage {
  return result.hasErrorMessage;
}
- (NSString*) errorMessage {
  return result.errorMessage;
}
- (FederationError_Builder*) setErrorMessage:(NSString*) value {
  result.hasErrorMessage = YES;
  result.errorMessage = value;
  return self;
}
- (FederationError_Builder*) clearErrorMessage {
  result.hasErrorMessage = NO;
  result.errorMessage = @"";
  return self;
}
@end

