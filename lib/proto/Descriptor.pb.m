// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Descriptor.pb.h"

@implementation DescriptorRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [DescriptorRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FileDescriptorSet ()
@property (retain) NSMutableArray* mutableFileList;
@end

@implementation FileDescriptorSet

@synthesize mutableFileList;
- (void) dealloc {
  self.mutableFileList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static FileDescriptorSet* defaultFileDescriptorSetInstance = nil;
+ (void) initialize {
  if (self == [FileDescriptorSet class]) {
    defaultFileDescriptorSetInstance = [[FileDescriptorSet alloc] init];
  }
}
+ (FileDescriptorSet*) defaultInstance {
  return defaultFileDescriptorSetInstance;
}
- (FileDescriptorSet*) defaultInstance {
  return defaultFileDescriptorSetInstance;
}
- (NSArray*) fileList {
  return mutableFileList;
}
- (FileDescriptorProto*) fileAtIndex:(int32_t) index {
  id value = [mutableFileList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (FileDescriptorProto* element in self.fileList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (FileDescriptorProto* element in self.fileList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (FileDescriptorProto* element in self.fileList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileDescriptorSet*) parseFromData:(NSData*) data {
  return (FileDescriptorSet*)[[[FileDescriptorSet builder] mergeFromData:data] build];
}
+ (FileDescriptorSet*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileDescriptorSet*)[[[FileDescriptorSet builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileDescriptorSet*) parseFromInputStream:(NSInputStream*) input {
  return (FileDescriptorSet*)[[[FileDescriptorSet builder] mergeFromInputStream:input] build];
}
+ (FileDescriptorSet*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileDescriptorSet*)[[[FileDescriptorSet builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileDescriptorSet*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileDescriptorSet*)[[[FileDescriptorSet builder] mergeFromCodedInputStream:input] build];
}
+ (FileDescriptorSet*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileDescriptorSet*)[[[FileDescriptorSet builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileDescriptorSet_Builder*) builder {
  return [[[FileDescriptorSet_Builder alloc] init] autorelease];
}
+ (FileDescriptorSet_Builder*) builderWithPrototype:(FileDescriptorSet*) prototype {
  return [[FileDescriptorSet builder] mergeFrom:prototype];
}
- (FileDescriptorSet_Builder*) builder {
  return [FileDescriptorSet builder];
}
@end

@interface FileDescriptorSet_Builder()
@property (retain) FileDescriptorSet* result;
@end

@implementation FileDescriptorSet_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FileDescriptorSet alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileDescriptorSet_Builder*) clear {
  self.result = [[[FileDescriptorSet alloc] init] autorelease];
  return self;
}
- (FileDescriptorSet_Builder*) clone {
  return [FileDescriptorSet builderWithPrototype:result];
}
- (FileDescriptorSet*) defaultInstance {
  return [FileDescriptorSet defaultInstance];
}
- (FileDescriptorSet*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileDescriptorSet*) buildPartial {
  FileDescriptorSet* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FileDescriptorSet_Builder*) mergeFrom:(FileDescriptorSet*) other {
  if (other == [FileDescriptorSet defaultInstance]) {
    return self;
  }
  if (other.mutableFileList.count > 0) {
    if (result.mutableFileList == nil) {
      result.mutableFileList = [NSMutableArray array];
    }
    [result.mutableFileList addObjectsFromArray:other.mutableFileList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileDescriptorSet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileDescriptorSet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FileDescriptorProto_Builder* subBuilder = [FileDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFile:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) fileList {
  if (result.mutableFileList == nil) { return [NSArray array]; }
  return result.mutableFileList;
}
- (FileDescriptorProto*) fileAtIndex:(int32_t) index {
  return [result fileAtIndex:index];
}
- (FileDescriptorSet_Builder*) replaceFileAtIndex:(int32_t) index with:(FileDescriptorProto*) value {
  [result.mutableFileList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileDescriptorSet_Builder*) addAllFile:(NSArray*) values {
  if (result.mutableFileList == nil) {
    result.mutableFileList = [NSMutableArray array];
  }
  [result.mutableFileList addObjectsFromArray:values];
  return self;
}
- (FileDescriptorSet_Builder*) clearFileList {
  result.mutableFileList = nil;
  return self;
}
- (FileDescriptorSet_Builder*) addFile:(FileDescriptorProto*) value {
  if (result.mutableFileList == nil) {
    result.mutableFileList = [NSMutableArray array];
  }
  [result.mutableFileList addObject:value];
  return self;
}
@end

@interface FileDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSString* package;
@property (retain) NSMutableArray* mutableDependencyList;
@property (retain) NSMutableArray* mutableMessageTypeList;
@property (retain) NSMutableArray* mutableEnumTypeList;
@property (retain) NSMutableArray* mutableServiceList;
@property (retain) NSMutableArray* mutableExtensionList;
@property (retain) FileOptions* options;
@end

@implementation FileDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasPackage {
  return !!hasPackage_;
}
- (void) setHasPackage:(BOOL) value {
  hasPackage_ = !!value;
}
@synthesize package;
@synthesize mutableDependencyList;
@synthesize mutableMessageTypeList;
@synthesize mutableEnumTypeList;
@synthesize mutableServiceList;
@synthesize mutableExtensionList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.package = nil;
  self.mutableDependencyList = nil;
  self.mutableMessageTypeList = nil;
  self.mutableEnumTypeList = nil;
  self.mutableServiceList = nil;
  self.mutableExtensionList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.package = @"";
    self.options = [FileOptions defaultInstance];
  }
  return self;
}
static FileDescriptorProto* defaultFileDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [FileDescriptorProto class]) {
    defaultFileDescriptorProtoInstance = [[FileDescriptorProto alloc] init];
  }
}
+ (FileDescriptorProto*) defaultInstance {
  return defaultFileDescriptorProtoInstance;
}
- (FileDescriptorProto*) defaultInstance {
  return defaultFileDescriptorProtoInstance;
}
- (NSArray*) dependencyList {
  return mutableDependencyList;
}
- (NSString*) dependencyAtIndex:(int32_t) index {
  id value = [mutableDependencyList objectAtIndex:index];
  return value;
}
- (NSArray*) messageTypeList {
  return mutableMessageTypeList;
}
- (DescriptorProto*) messageTypeAtIndex:(int32_t) index {
  id value = [mutableMessageTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) enumTypeList {
  return mutableEnumTypeList;
}
- (EnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  id value = [mutableEnumTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) serviceList {
  return mutableServiceList;
}
- (ServiceDescriptorProto*) serviceAtIndex:(int32_t) index {
  id value = [mutableServiceList objectAtIndex:index];
  return value;
}
- (NSArray*) extensionList {
  return mutableExtensionList;
}
- (FieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  id value = [mutableExtensionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (DescriptorProto* element in self.messageTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (EnumDescriptorProto* element in self.enumTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (ServiceDescriptorProto* element in self.serviceList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (FieldDescriptorProto* element in self.extensionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasPackage) {
    [output writeString:2 value:self.package];
  }
  for (NSString* element in self.mutableDependencyList) {
    [output writeString:3 value:element];
  }
  for (DescriptorProto* element in self.messageTypeList) {
    [output writeMessage:4 value:element];
  }
  for (EnumDescriptorProto* element in self.enumTypeList) {
    [output writeMessage:5 value:element];
  }
  for (ServiceDescriptorProto* element in self.serviceList) {
    [output writeMessage:6 value:element];
  }
  for (FieldDescriptorProto* element in self.extensionList) {
    [output writeMessage:7 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:8 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasPackage) {
    size += computeStringSize(2, self.package);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableDependencyList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableDependencyList.count;
  }
  for (DescriptorProto* element in self.messageTypeList) {
    size += computeMessageSize(4, element);
  }
  for (EnumDescriptorProto* element in self.enumTypeList) {
    size += computeMessageSize(5, element);
  }
  for (ServiceDescriptorProto* element in self.serviceList) {
    size += computeMessageSize(6, element);
  }
  for (FieldDescriptorProto* element in self.extensionList) {
    size += computeMessageSize(7, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(8, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileDescriptorProto*) parseFromData:(NSData*) data {
  return (FileDescriptorProto*)[[[FileDescriptorProto builder] mergeFromData:data] build];
}
+ (FileDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileDescriptorProto*)[[[FileDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (FileDescriptorProto*)[[[FileDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (FileDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileDescriptorProto*)[[[FileDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileDescriptorProto*)[[[FileDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (FileDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileDescriptorProto*)[[[FileDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileDescriptorProto_Builder*) builder {
  return [[[FileDescriptorProto_Builder alloc] init] autorelease];
}
+ (FileDescriptorProto_Builder*) builderWithPrototype:(FileDescriptorProto*) prototype {
  return [[FileDescriptorProto builder] mergeFrom:prototype];
}
- (FileDescriptorProto_Builder*) builder {
  return [FileDescriptorProto builder];
}
@end

@interface FileDescriptorProto_Builder()
@property (retain) FileDescriptorProto* result;
@end

@implementation FileDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FileDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileDescriptorProto_Builder*) clear {
  self.result = [[[FileDescriptorProto alloc] init] autorelease];
  return self;
}
- (FileDescriptorProto_Builder*) clone {
  return [FileDescriptorProto builderWithPrototype:result];
}
- (FileDescriptorProto*) defaultInstance {
  return [FileDescriptorProto defaultInstance];
}
- (FileDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileDescriptorProto*) buildPartial {
  FileDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FileDescriptorProto_Builder*) mergeFrom:(FileDescriptorProto*) other {
  if (other == [FileDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPackage) {
    [self setPackage:other.package];
  }
  if (other.mutableDependencyList.count > 0) {
    if (result.mutableDependencyList == nil) {
      result.mutableDependencyList = [NSMutableArray array];
    }
    [result.mutableDependencyList addObjectsFromArray:other.mutableDependencyList];
  }
  if (other.mutableMessageTypeList.count > 0) {
    if (result.mutableMessageTypeList == nil) {
      result.mutableMessageTypeList = [NSMutableArray array];
    }
    [result.mutableMessageTypeList addObjectsFromArray:other.mutableMessageTypeList];
  }
  if (other.mutableEnumTypeList.count > 0) {
    if (result.mutableEnumTypeList == nil) {
      result.mutableEnumTypeList = [NSMutableArray array];
    }
    [result.mutableEnumTypeList addObjectsFromArray:other.mutableEnumTypeList];
  }
  if (other.mutableServiceList.count > 0) {
    if (result.mutableServiceList == nil) {
      result.mutableServiceList = [NSMutableArray array];
    }
    [result.mutableServiceList addObjectsFromArray:other.mutableServiceList];
  }
  if (other.mutableExtensionList.count > 0) {
    if (result.mutableExtensionList == nil) {
      result.mutableExtensionList = [NSMutableArray array];
    }
    [result.mutableExtensionList addObjectsFromArray:other.mutableExtensionList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setPackage:[input readString]];
        break;
      }
      case 26: {
        [self addDependency:[input readString]];
        break;
      }
      case 34: {
        DescriptorProto_Builder* subBuilder = [DescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMessageType:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        EnumDescriptorProto_Builder* subBuilder = [EnumDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEnumType:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        ServiceDescriptorProto_Builder* subBuilder = [ServiceDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addService:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        FieldDescriptorProto_Builder* subBuilder = [FieldDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtension:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        FileOptions_Builder* subBuilder = [FileOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FileDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FileDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasPackage {
  return result.hasPackage;
}
- (NSString*) package {
  return result.package;
}
- (FileDescriptorProto_Builder*) setPackage:(NSString*) value {
  result.hasPackage = YES;
  result.package = value;
  return self;
}
- (FileDescriptorProto_Builder*) clearPackage {
  result.hasPackage = NO;
  result.package = @"";
  return self;
}
- (NSArray*) dependencyList {
  if (result.mutableDependencyList == nil) {
    return [NSArray array];
  }
  return result.mutableDependencyList;
}
- (NSString*) dependencyAtIndex:(int32_t) index {
  return [result dependencyAtIndex:index];
}
- (FileDescriptorProto_Builder*) replaceDependencyAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableDependencyList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileDescriptorProto_Builder*) addDependency:(NSString*) value {
  if (result.mutableDependencyList == nil) {
    result.mutableDependencyList = [NSMutableArray array];
  }
  [result.mutableDependencyList addObject:value];
  return self;
}
- (FileDescriptorProto_Builder*) addAllDependency:(NSArray*) values {
  if (result.mutableDependencyList == nil) {
    result.mutableDependencyList = [NSMutableArray array];
  }
  [result.mutableDependencyList addObjectsFromArray:values];
  return self;
}
- (FileDescriptorProto_Builder*) clearDependencyList {
  result.mutableDependencyList = nil;
  return self;
}
- (NSArray*) messageTypeList {
  if (result.mutableMessageTypeList == nil) { return [NSArray array]; }
  return result.mutableMessageTypeList;
}
- (DescriptorProto*) messageTypeAtIndex:(int32_t) index {
  return [result messageTypeAtIndex:index];
}
- (FileDescriptorProto_Builder*) replaceMessageTypeAtIndex:(int32_t) index with:(DescriptorProto*) value {
  [result.mutableMessageTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileDescriptorProto_Builder*) addAllMessageType:(NSArray*) values {
  if (result.mutableMessageTypeList == nil) {
    result.mutableMessageTypeList = [NSMutableArray array];
  }
  [result.mutableMessageTypeList addObjectsFromArray:values];
  return self;
}
- (FileDescriptorProto_Builder*) clearMessageTypeList {
  result.mutableMessageTypeList = nil;
  return self;
}
- (FileDescriptorProto_Builder*) addMessageType:(DescriptorProto*) value {
  if (result.mutableMessageTypeList == nil) {
    result.mutableMessageTypeList = [NSMutableArray array];
  }
  [result.mutableMessageTypeList addObject:value];
  return self;
}
- (NSArray*) enumTypeList {
  if (result.mutableEnumTypeList == nil) { return [NSArray array]; }
  return result.mutableEnumTypeList;
}
- (EnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  return [result enumTypeAtIndex:index];
}
- (FileDescriptorProto_Builder*) replaceEnumTypeAtIndex:(int32_t) index with:(EnumDescriptorProto*) value {
  [result.mutableEnumTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileDescriptorProto_Builder*) addAllEnumType:(NSArray*) values {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObjectsFromArray:values];
  return self;
}
- (FileDescriptorProto_Builder*) clearEnumTypeList {
  result.mutableEnumTypeList = nil;
  return self;
}
- (FileDescriptorProto_Builder*) addEnumType:(EnumDescriptorProto*) value {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObject:value];
  return self;
}
- (NSArray*) serviceList {
  if (result.mutableServiceList == nil) { return [NSArray array]; }
  return result.mutableServiceList;
}
- (ServiceDescriptorProto*) serviceAtIndex:(int32_t) index {
  return [result serviceAtIndex:index];
}
- (FileDescriptorProto_Builder*) replaceServiceAtIndex:(int32_t) index with:(ServiceDescriptorProto*) value {
  [result.mutableServiceList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileDescriptorProto_Builder*) addAllService:(NSArray*) values {
  if (result.mutableServiceList == nil) {
    result.mutableServiceList = [NSMutableArray array];
  }
  [result.mutableServiceList addObjectsFromArray:values];
  return self;
}
- (FileDescriptorProto_Builder*) clearServiceList {
  result.mutableServiceList = nil;
  return self;
}
- (FileDescriptorProto_Builder*) addService:(ServiceDescriptorProto*) value {
  if (result.mutableServiceList == nil) {
    result.mutableServiceList = [NSMutableArray array];
  }
  [result.mutableServiceList addObject:value];
  return self;
}
- (NSArray*) extensionList {
  if (result.mutableExtensionList == nil) { return [NSArray array]; }
  return result.mutableExtensionList;
}
- (FieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  return [result extensionAtIndex:index];
}
- (FileDescriptorProto_Builder*) replaceExtensionAtIndex:(int32_t) index with:(FieldDescriptorProto*) value {
  [result.mutableExtensionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileDescriptorProto_Builder*) addAllExtension:(NSArray*) values {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObjectsFromArray:values];
  return self;
}
- (FileDescriptorProto_Builder*) clearExtensionList {
  result.mutableExtensionList = nil;
  return self;
}
- (FileDescriptorProto_Builder*) addExtension:(FieldDescriptorProto*) value {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (FileOptions*) options {
  return result.options;
}
- (FileDescriptorProto_Builder*) setOptions:(FileOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (FileDescriptorProto_Builder*) setOptionsBuilder:(FileOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (FileDescriptorProto_Builder*) mergeOptions:(FileOptions*) value {
  if (result.hasOptions &&
      result.options != [FileOptions defaultInstance]) {
    result.options =
      [[[FileOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (FileDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [FileOptions defaultInstance];
  return self;
}
@end

@interface DescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSMutableArray* mutableFieldList;
@property (retain) NSMutableArray* mutableExtensionList;
@property (retain) NSMutableArray* mutableNestedTypeList;
@property (retain) NSMutableArray* mutableEnumTypeList;
@property (retain) NSMutableArray* mutableExtensionRangeList;
@property (retain) MessageOptions* options;
@end

@implementation DescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
@synthesize mutableFieldList;
@synthesize mutableExtensionList;
@synthesize mutableNestedTypeList;
@synthesize mutableEnumTypeList;
@synthesize mutableExtensionRangeList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.mutableFieldList = nil;
  self.mutableExtensionList = nil;
  self.mutableNestedTypeList = nil;
  self.mutableEnumTypeList = nil;
  self.mutableExtensionRangeList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.options = [MessageOptions defaultInstance];
  }
  return self;
}
static DescriptorProto* defaultDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [DescriptorProto class]) {
    defaultDescriptorProtoInstance = [[DescriptorProto alloc] init];
  }
}
+ (DescriptorProto*) defaultInstance {
  return defaultDescriptorProtoInstance;
}
- (DescriptorProto*) defaultInstance {
  return defaultDescriptorProtoInstance;
}
- (NSArray*) fieldList {
  return mutableFieldList;
}
- (FieldDescriptorProto*) fieldAtIndex:(int32_t) index {
  id value = [mutableFieldList objectAtIndex:index];
  return value;
}
- (NSArray*) extensionList {
  return mutableExtensionList;
}
- (FieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  id value = [mutableExtensionList objectAtIndex:index];
  return value;
}
- (NSArray*) nestedTypeList {
  return mutableNestedTypeList;
}
- (DescriptorProto*) nestedTypeAtIndex:(int32_t) index {
  id value = [mutableNestedTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) enumTypeList {
  return mutableEnumTypeList;
}
- (EnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  id value = [mutableEnumTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) extensionRangeList {
  return mutableExtensionRangeList;
}
- (DescriptorProto_ExtensionRange*) extensionRangeAtIndex:(int32_t) index {
  id value = [mutableExtensionRangeList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (FieldDescriptorProto* element in self.fieldList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (FieldDescriptorProto* element in self.extensionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (DescriptorProto* element in self.nestedTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (EnumDescriptorProto* element in self.enumTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  for (FieldDescriptorProto* element in self.fieldList) {
    [output writeMessage:2 value:element];
  }
  for (DescriptorProto* element in self.nestedTypeList) {
    [output writeMessage:3 value:element];
  }
  for (EnumDescriptorProto* element in self.enumTypeList) {
    [output writeMessage:4 value:element];
  }
  for (DescriptorProto_ExtensionRange* element in self.extensionRangeList) {
    [output writeMessage:5 value:element];
  }
  for (FieldDescriptorProto* element in self.extensionList) {
    [output writeMessage:6 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:7 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  for (FieldDescriptorProto* element in self.fieldList) {
    size += computeMessageSize(2, element);
  }
  for (DescriptorProto* element in self.nestedTypeList) {
    size += computeMessageSize(3, element);
  }
  for (EnumDescriptorProto* element in self.enumTypeList) {
    size += computeMessageSize(4, element);
  }
  for (DescriptorProto_ExtensionRange* element in self.extensionRangeList) {
    size += computeMessageSize(5, element);
  }
  for (FieldDescriptorProto* element in self.extensionList) {
    size += computeMessageSize(6, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(7, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DescriptorProto*) parseFromData:(NSData*) data {
  return (DescriptorProto*)[[[DescriptorProto builder] mergeFromData:data] build];
}
+ (DescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DescriptorProto*)[[[DescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (DescriptorProto*)[[[DescriptorProto builder] mergeFromInputStream:input] build];
}
+ (DescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DescriptorProto*)[[[DescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DescriptorProto*)[[[DescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (DescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DescriptorProto*)[[[DescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DescriptorProto_Builder*) builder {
  return [[[DescriptorProto_Builder alloc] init] autorelease];
}
+ (DescriptorProto_Builder*) builderWithPrototype:(DescriptorProto*) prototype {
  return [[DescriptorProto builder] mergeFrom:prototype];
}
- (DescriptorProto_Builder*) builder {
  return [DescriptorProto builder];
}
@end

@interface DescriptorProto_ExtensionRange ()
@property int32_t start;
@property int32_t end;
@end

@implementation DescriptorProto_ExtensionRange

- (BOOL) hasStart {
  return !!hasStart_;
}
- (void) setHasStart:(BOOL) value {
  hasStart_ = !!value;
}
@synthesize start;
- (BOOL) hasEnd {
  return !!hasEnd_;
}
- (void) setHasEnd:(BOOL) value {
  hasEnd_ = !!value;
}
@synthesize end;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.start = 0;
    self.end = 0;
  }
  return self;
}
static DescriptorProto_ExtensionRange* defaultDescriptorProto_ExtensionRangeInstance = nil;
+ (void) initialize {
  if (self == [DescriptorProto_ExtensionRange class]) {
    defaultDescriptorProto_ExtensionRangeInstance = [[DescriptorProto_ExtensionRange alloc] init];
  }
}
+ (DescriptorProto_ExtensionRange*) defaultInstance {
  return defaultDescriptorProto_ExtensionRangeInstance;
}
- (DescriptorProto_ExtensionRange*) defaultInstance {
  return defaultDescriptorProto_ExtensionRangeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStart) {
    [output writeInt32:1 value:self.start];
  }
  if (self.hasEnd) {
    [output writeInt32:2 value:self.end];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStart) {
    size += computeInt32Size(1, self.start);
  }
  if (self.hasEnd) {
    size += computeInt32Size(2, self.end);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DescriptorProto_ExtensionRange*) parseFromData:(NSData*) data {
  return (DescriptorProto_ExtensionRange*)[[[DescriptorProto_ExtensionRange builder] mergeFromData:data] build];
}
+ (DescriptorProto_ExtensionRange*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DescriptorProto_ExtensionRange*)[[[DescriptorProto_ExtensionRange builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DescriptorProto_ExtensionRange*) parseFromInputStream:(NSInputStream*) input {
  return (DescriptorProto_ExtensionRange*)[[[DescriptorProto_ExtensionRange builder] mergeFromInputStream:input] build];
}
+ (DescriptorProto_ExtensionRange*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DescriptorProto_ExtensionRange*)[[[DescriptorProto_ExtensionRange builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DescriptorProto_ExtensionRange*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DescriptorProto_ExtensionRange*)[[[DescriptorProto_ExtensionRange builder] mergeFromCodedInputStream:input] build];
}
+ (DescriptorProto_ExtensionRange*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DescriptorProto_ExtensionRange*)[[[DescriptorProto_ExtensionRange builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DescriptorProto_ExtensionRange_Builder*) builder {
  return [[[DescriptorProto_ExtensionRange_Builder alloc] init] autorelease];
}
+ (DescriptorProto_ExtensionRange_Builder*) builderWithPrototype:(DescriptorProto_ExtensionRange*) prototype {
  return [[DescriptorProto_ExtensionRange builder] mergeFrom:prototype];
}
- (DescriptorProto_ExtensionRange_Builder*) builder {
  return [DescriptorProto_ExtensionRange builder];
}
@end

@interface DescriptorProto_ExtensionRange_Builder()
@property (retain) DescriptorProto_ExtensionRange* result;
@end

@implementation DescriptorProto_ExtensionRange_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DescriptorProto_ExtensionRange alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DescriptorProto_ExtensionRange_Builder*) clear {
  self.result = [[[DescriptorProto_ExtensionRange alloc] init] autorelease];
  return self;
}
- (DescriptorProto_ExtensionRange_Builder*) clone {
  return [DescriptorProto_ExtensionRange builderWithPrototype:result];
}
- (DescriptorProto_ExtensionRange*) defaultInstance {
  return [DescriptorProto_ExtensionRange defaultInstance];
}
- (DescriptorProto_ExtensionRange*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DescriptorProto_ExtensionRange*) buildPartial {
  DescriptorProto_ExtensionRange* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DescriptorProto_ExtensionRange_Builder*) mergeFrom:(DescriptorProto_ExtensionRange*) other {
  if (other == [DescriptorProto_ExtensionRange defaultInstance]) {
    return self;
  }
  if (other.hasStart) {
    [self setStart:other.start];
  }
  if (other.hasEnd) {
    [self setEnd:other.end];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DescriptorProto_ExtensionRange_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DescriptorProto_ExtensionRange_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStart:[input readInt32]];
        break;
      }
      case 16: {
        [self setEnd:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStart {
  return result.hasStart;
}
- (int32_t) start {
  return result.start;
}
- (DescriptorProto_ExtensionRange_Builder*) setStart:(int32_t) value {
  result.hasStart = YES;
  result.start = value;
  return self;
}
- (DescriptorProto_ExtensionRange_Builder*) clearStart {
  result.hasStart = NO;
  result.start = 0;
  return self;
}
- (BOOL) hasEnd {
  return result.hasEnd;
}
- (int32_t) end {
  return result.end;
}
- (DescriptorProto_ExtensionRange_Builder*) setEnd:(int32_t) value {
  result.hasEnd = YES;
  result.end = value;
  return self;
}
- (DescriptorProto_ExtensionRange_Builder*) clearEnd {
  result.hasEnd = NO;
  result.end = 0;
  return self;
}
@end

@interface DescriptorProto_Builder()
@property (retain) DescriptorProto* result;
@end

@implementation DescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DescriptorProto_Builder*) clear {
  self.result = [[[DescriptorProto alloc] init] autorelease];
  return self;
}
- (DescriptorProto_Builder*) clone {
  return [DescriptorProto builderWithPrototype:result];
}
- (DescriptorProto*) defaultInstance {
  return [DescriptorProto defaultInstance];
}
- (DescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DescriptorProto*) buildPartial {
  DescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DescriptorProto_Builder*) mergeFrom:(DescriptorProto*) other {
  if (other == [DescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableFieldList.count > 0) {
    if (result.mutableFieldList == nil) {
      result.mutableFieldList = [NSMutableArray array];
    }
    [result.mutableFieldList addObjectsFromArray:other.mutableFieldList];
  }
  if (other.mutableExtensionList.count > 0) {
    if (result.mutableExtensionList == nil) {
      result.mutableExtensionList = [NSMutableArray array];
    }
    [result.mutableExtensionList addObjectsFromArray:other.mutableExtensionList];
  }
  if (other.mutableNestedTypeList.count > 0) {
    if (result.mutableNestedTypeList == nil) {
      result.mutableNestedTypeList = [NSMutableArray array];
    }
    [result.mutableNestedTypeList addObjectsFromArray:other.mutableNestedTypeList];
  }
  if (other.mutableEnumTypeList.count > 0) {
    if (result.mutableEnumTypeList == nil) {
      result.mutableEnumTypeList = [NSMutableArray array];
    }
    [result.mutableEnumTypeList addObjectsFromArray:other.mutableEnumTypeList];
  }
  if (other.mutableExtensionRangeList.count > 0) {
    if (result.mutableExtensionRangeList == nil) {
      result.mutableExtensionRangeList = [NSMutableArray array];
    }
    [result.mutableExtensionRangeList addObjectsFromArray:other.mutableExtensionRangeList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        FieldDescriptorProto_Builder* subBuilder = [FieldDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addField:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        DescriptorProto_Builder* subBuilder = [DescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNestedType:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        EnumDescriptorProto_Builder* subBuilder = [EnumDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEnumType:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        DescriptorProto_ExtensionRange_Builder* subBuilder = [DescriptorProto_ExtensionRange builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtensionRange:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FieldDescriptorProto_Builder* subBuilder = [FieldDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtension:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        MessageOptions_Builder* subBuilder = [MessageOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (DescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (DescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSArray*) fieldList {
  if (result.mutableFieldList == nil) { return [NSArray array]; }
  return result.mutableFieldList;
}
- (FieldDescriptorProto*) fieldAtIndex:(int32_t) index {
  return [result fieldAtIndex:index];
}
- (DescriptorProto_Builder*) replaceFieldAtIndex:(int32_t) index with:(FieldDescriptorProto*) value {
  [result.mutableFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (DescriptorProto_Builder*) addAllField:(NSArray*) values {
  if (result.mutableFieldList == nil) {
    result.mutableFieldList = [NSMutableArray array];
  }
  [result.mutableFieldList addObjectsFromArray:values];
  return self;
}
- (DescriptorProto_Builder*) clearFieldList {
  result.mutableFieldList = nil;
  return self;
}
- (DescriptorProto_Builder*) addField:(FieldDescriptorProto*) value {
  if (result.mutableFieldList == nil) {
    result.mutableFieldList = [NSMutableArray array];
  }
  [result.mutableFieldList addObject:value];
  return self;
}
- (NSArray*) extensionList {
  if (result.mutableExtensionList == nil) { return [NSArray array]; }
  return result.mutableExtensionList;
}
- (FieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  return [result extensionAtIndex:index];
}
- (DescriptorProto_Builder*) replaceExtensionAtIndex:(int32_t) index with:(FieldDescriptorProto*) value {
  [result.mutableExtensionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (DescriptorProto_Builder*) addAllExtension:(NSArray*) values {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObjectsFromArray:values];
  return self;
}
- (DescriptorProto_Builder*) clearExtensionList {
  result.mutableExtensionList = nil;
  return self;
}
- (DescriptorProto_Builder*) addExtension:(FieldDescriptorProto*) value {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObject:value];
  return self;
}
- (NSArray*) nestedTypeList {
  if (result.mutableNestedTypeList == nil) { return [NSArray array]; }
  return result.mutableNestedTypeList;
}
- (DescriptorProto*) nestedTypeAtIndex:(int32_t) index {
  return [result nestedTypeAtIndex:index];
}
- (DescriptorProto_Builder*) replaceNestedTypeAtIndex:(int32_t) index with:(DescriptorProto*) value {
  [result.mutableNestedTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (DescriptorProto_Builder*) addAllNestedType:(NSArray*) values {
  if (result.mutableNestedTypeList == nil) {
    result.mutableNestedTypeList = [NSMutableArray array];
  }
  [result.mutableNestedTypeList addObjectsFromArray:values];
  return self;
}
- (DescriptorProto_Builder*) clearNestedTypeList {
  result.mutableNestedTypeList = nil;
  return self;
}
- (DescriptorProto_Builder*) addNestedType:(DescriptorProto*) value {
  if (result.mutableNestedTypeList == nil) {
    result.mutableNestedTypeList = [NSMutableArray array];
  }
  [result.mutableNestedTypeList addObject:value];
  return self;
}
- (NSArray*) enumTypeList {
  if (result.mutableEnumTypeList == nil) { return [NSArray array]; }
  return result.mutableEnumTypeList;
}
- (EnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  return [result enumTypeAtIndex:index];
}
- (DescriptorProto_Builder*) replaceEnumTypeAtIndex:(int32_t) index with:(EnumDescriptorProto*) value {
  [result.mutableEnumTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (DescriptorProto_Builder*) addAllEnumType:(NSArray*) values {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObjectsFromArray:values];
  return self;
}
- (DescriptorProto_Builder*) clearEnumTypeList {
  result.mutableEnumTypeList = nil;
  return self;
}
- (DescriptorProto_Builder*) addEnumType:(EnumDescriptorProto*) value {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObject:value];
  return self;
}
- (NSArray*) extensionRangeList {
  if (result.mutableExtensionRangeList == nil) { return [NSArray array]; }
  return result.mutableExtensionRangeList;
}
- (DescriptorProto_ExtensionRange*) extensionRangeAtIndex:(int32_t) index {
  return [result extensionRangeAtIndex:index];
}
- (DescriptorProto_Builder*) replaceExtensionRangeAtIndex:(int32_t) index with:(DescriptorProto_ExtensionRange*) value {
  [result.mutableExtensionRangeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (DescriptorProto_Builder*) addAllExtensionRange:(NSArray*) values {
  if (result.mutableExtensionRangeList == nil) {
    result.mutableExtensionRangeList = [NSMutableArray array];
  }
  [result.mutableExtensionRangeList addObjectsFromArray:values];
  return self;
}
- (DescriptorProto_Builder*) clearExtensionRangeList {
  result.mutableExtensionRangeList = nil;
  return self;
}
- (DescriptorProto_Builder*) addExtensionRange:(DescriptorProto_ExtensionRange*) value {
  if (result.mutableExtensionRangeList == nil) {
    result.mutableExtensionRangeList = [NSMutableArray array];
  }
  [result.mutableExtensionRangeList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (MessageOptions*) options {
  return result.options;
}
- (DescriptorProto_Builder*) setOptions:(MessageOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (DescriptorProto_Builder*) setOptionsBuilder:(MessageOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (DescriptorProto_Builder*) mergeOptions:(MessageOptions*) value {
  if (result.hasOptions &&
      result.options != [MessageOptions defaultInstance]) {
    result.options =
      [[[MessageOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (DescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [MessageOptions defaultInstance];
  return self;
}
@end

@interface FieldDescriptorProto ()
@property (retain) NSString* name;
@property int32_t number;
@property FieldDescriptorProto_Label label;
@property FieldDescriptorProto_Type type;
@property (retain) NSString* typeName;
@property (retain) NSString* extendee;
@property (retain) NSString* defaultValue;
@property (retain) FieldOptions* options;
@end

@implementation FieldDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNumber {
  return !!hasNumber_;
}
- (void) setHasNumber:(BOOL) value {
  hasNumber_ = !!value;
}
@synthesize number;
- (BOOL) hasLabel {
  return !!hasLabel_;
}
- (void) setHasLabel:(BOOL) value {
  hasLabel_ = !!value;
}
@synthesize label;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasTypeName {
  return !!hasTypeName_;
}
- (void) setHasTypeName:(BOOL) value {
  hasTypeName_ = !!value;
}
@synthesize typeName;
- (BOOL) hasExtendee {
  return !!hasExtendee_;
}
- (void) setHasExtendee:(BOOL) value {
  hasExtendee_ = !!value;
}
@synthesize extendee;
- (BOOL) hasDefaultValue {
  return !!hasDefaultValue_;
}
- (void) setHasDefaultValue:(BOOL) value {
  hasDefaultValue_ = !!value;
}
@synthesize defaultValue;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.typeName = nil;
  self.extendee = nil;
  self.defaultValue = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.number = 0;
    self.label = FieldDescriptorProto_LabelLabelOptional;
    self.type = FieldDescriptorProto_TypeTypeDouble;
    self.typeName = @"";
    self.extendee = @"";
    self.defaultValue = @"";
    self.options = [FieldOptions defaultInstance];
  }
  return self;
}
static FieldDescriptorProto* defaultFieldDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [FieldDescriptorProto class]) {
    defaultFieldDescriptorProtoInstance = [[FieldDescriptorProto alloc] init];
  }
}
+ (FieldDescriptorProto*) defaultInstance {
  return defaultFieldDescriptorProtoInstance;
}
- (FieldDescriptorProto*) defaultInstance {
  return defaultFieldDescriptorProtoInstance;
}
- (BOOL) isInitialized {
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasExtendee) {
    [output writeString:2 value:self.extendee];
  }
  if (self.hasNumber) {
    [output writeInt32:3 value:self.number];
  }
  if (self.hasLabel) {
    [output writeEnum:4 value:self.label];
  }
  if (self.hasType) {
    [output writeEnum:5 value:self.type];
  }
  if (self.hasTypeName) {
    [output writeString:6 value:self.typeName];
  }
  if (self.hasDefaultValue) {
    [output writeString:7 value:self.defaultValue];
  }
  if (self.hasOptions) {
    [output writeMessage:8 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasExtendee) {
    size += computeStringSize(2, self.extendee);
  }
  if (self.hasNumber) {
    size += computeInt32Size(3, self.number);
  }
  if (self.hasLabel) {
    size += computeEnumSize(4, self.label);
  }
  if (self.hasType) {
    size += computeEnumSize(5, self.type);
  }
  if (self.hasTypeName) {
    size += computeStringSize(6, self.typeName);
  }
  if (self.hasDefaultValue) {
    size += computeStringSize(7, self.defaultValue);
  }
  if (self.hasOptions) {
    size += computeMessageSize(8, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FieldDescriptorProto*) parseFromData:(NSData*) data {
  return (FieldDescriptorProto*)[[[FieldDescriptorProto builder] mergeFromData:data] build];
}
+ (FieldDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FieldDescriptorProto*)[[[FieldDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FieldDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (FieldDescriptorProto*)[[[FieldDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (FieldDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FieldDescriptorProto*)[[[FieldDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FieldDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FieldDescriptorProto*)[[[FieldDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (FieldDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FieldDescriptorProto*)[[[FieldDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FieldDescriptorProto_Builder*) builder {
  return [[[FieldDescriptorProto_Builder alloc] init] autorelease];
}
+ (FieldDescriptorProto_Builder*) builderWithPrototype:(FieldDescriptorProto*) prototype {
  return [[FieldDescriptorProto builder] mergeFrom:prototype];
}
- (FieldDescriptorProto_Builder*) builder {
  return [FieldDescriptorProto builder];
}
@end

BOOL FieldDescriptorProto_TypeIsValidValue(FieldDescriptorProto_Type value) {
  switch (value) {
    case FieldDescriptorProto_TypeTypeDouble:
    case FieldDescriptorProto_TypeTypeFloat:
    case FieldDescriptorProto_TypeTypeInt64:
    case FieldDescriptorProto_TypeTypeUint64:
    case FieldDescriptorProto_TypeTypeInt32:
    case FieldDescriptorProto_TypeTypeFixed64:
    case FieldDescriptorProto_TypeTypeFixed32:
    case FieldDescriptorProto_TypeTypeBool:
    case FieldDescriptorProto_TypeTypeString:
    case FieldDescriptorProto_TypeTypeGroup:
    case FieldDescriptorProto_TypeTypeMessage:
    case FieldDescriptorProto_TypeTypeBytes:
    case FieldDescriptorProto_TypeTypeUint32:
    case FieldDescriptorProto_TypeTypeEnum:
    case FieldDescriptorProto_TypeTypeSfixed32:
    case FieldDescriptorProto_TypeTypeSfixed64:
    case FieldDescriptorProto_TypeTypeSint32:
    case FieldDescriptorProto_TypeTypeSint64:
      return YES;
    default:
      return NO;
  }
}
BOOL FieldDescriptorProto_LabelIsValidValue(FieldDescriptorProto_Label value) {
  switch (value) {
    case FieldDescriptorProto_LabelLabelOptional:
    case FieldDescriptorProto_LabelLabelRequired:
    case FieldDescriptorProto_LabelLabelRepeated:
      return YES;
    default:
      return NO;
  }
}
@interface FieldDescriptorProto_Builder()
@property (retain) FieldDescriptorProto* result;
@end

@implementation FieldDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FieldDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FieldDescriptorProto_Builder*) clear {
  self.result = [[[FieldDescriptorProto alloc] init] autorelease];
  return self;
}
- (FieldDescriptorProto_Builder*) clone {
  return [FieldDescriptorProto builderWithPrototype:result];
}
- (FieldDescriptorProto*) defaultInstance {
  return [FieldDescriptorProto defaultInstance];
}
- (FieldDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FieldDescriptorProto*) buildPartial {
  FieldDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FieldDescriptorProto_Builder*) mergeFrom:(FieldDescriptorProto*) other {
  if (other == [FieldDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNumber) {
    [self setNumber:other.number];
  }
  if (other.hasLabel) {
    [self setLabel:other.label];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasTypeName) {
    [self setTypeName:other.typeName];
  }
  if (other.hasExtendee) {
    [self setExtendee:other.extendee];
  }
  if (other.hasDefaultValue) {
    [self setDefaultValue:other.defaultValue];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FieldDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FieldDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setExtendee:[input readString]];
        break;
      }
      case 24: {
        [self setNumber:[input readInt32]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (FieldDescriptorProto_LabelIsValidValue(value)) {
          [self setLabel:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (FieldDescriptorProto_TypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 50: {
        [self setTypeName:[input readString]];
        break;
      }
      case 58: {
        [self setDefaultValue:[input readString]];
        break;
      }
      case 66: {
        FieldOptions_Builder* subBuilder = [FieldOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FieldDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FieldDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNumber {
  return result.hasNumber;
}
- (int32_t) number {
  return result.number;
}
- (FieldDescriptorProto_Builder*) setNumber:(int32_t) value {
  result.hasNumber = YES;
  result.number = value;
  return self;
}
- (FieldDescriptorProto_Builder*) clearNumber {
  result.hasNumber = NO;
  result.number = 0;
  return self;
}
- (BOOL) hasLabel {
  return result.hasLabel;
}
- (FieldDescriptorProto_Label) label {
  return result.label;
}
- (FieldDescriptorProto_Builder*) setLabel:(FieldDescriptorProto_Label) value {
  result.hasLabel = YES;
  result.label = value;
  return self;
}
- (FieldDescriptorProto_Builder*) clearLabel {
  result.hasLabel = NO;
  result.label = FieldDescriptorProto_LabelLabelOptional;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (FieldDescriptorProto_Type) type {
  return result.type;
}
- (FieldDescriptorProto_Builder*) setType:(FieldDescriptorProto_Type) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (FieldDescriptorProto_Builder*) clearType {
  result.hasType = NO;
  result.type = FieldDescriptorProto_TypeTypeDouble;
  return self;
}
- (BOOL) hasTypeName {
  return result.hasTypeName;
}
- (NSString*) typeName {
  return result.typeName;
}
- (FieldDescriptorProto_Builder*) setTypeName:(NSString*) value {
  result.hasTypeName = YES;
  result.typeName = value;
  return self;
}
- (FieldDescriptorProto_Builder*) clearTypeName {
  result.hasTypeName = NO;
  result.typeName = @"";
  return self;
}
- (BOOL) hasExtendee {
  return result.hasExtendee;
}
- (NSString*) extendee {
  return result.extendee;
}
- (FieldDescriptorProto_Builder*) setExtendee:(NSString*) value {
  result.hasExtendee = YES;
  result.extendee = value;
  return self;
}
- (FieldDescriptorProto_Builder*) clearExtendee {
  result.hasExtendee = NO;
  result.extendee = @"";
  return self;
}
- (BOOL) hasDefaultValue {
  return result.hasDefaultValue;
}
- (NSString*) defaultValue {
  return result.defaultValue;
}
- (FieldDescriptorProto_Builder*) setDefaultValue:(NSString*) value {
  result.hasDefaultValue = YES;
  result.defaultValue = value;
  return self;
}
- (FieldDescriptorProto_Builder*) clearDefaultValue {
  result.hasDefaultValue = NO;
  result.defaultValue = @"";
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (FieldOptions*) options {
  return result.options;
}
- (FieldDescriptorProto_Builder*) setOptions:(FieldOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (FieldDescriptorProto_Builder*) setOptionsBuilder:(FieldOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (FieldDescriptorProto_Builder*) mergeOptions:(FieldOptions*) value {
  if (result.hasOptions &&
      result.options != [FieldOptions defaultInstance]) {
    result.options =
      [[[FieldOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (FieldDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [FieldOptions defaultInstance];
  return self;
}
@end

@interface EnumDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSMutableArray* mutableValueList;
@property (retain) EnumOptions* options;
@end

@implementation EnumDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
@synthesize mutableValueList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.mutableValueList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.options = [EnumOptions defaultInstance];
  }
  return self;
}
static EnumDescriptorProto* defaultEnumDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [EnumDescriptorProto class]) {
    defaultEnumDescriptorProtoInstance = [[EnumDescriptorProto alloc] init];
  }
}
+ (EnumDescriptorProto*) defaultInstance {
  return defaultEnumDescriptorProtoInstance;
}
- (EnumDescriptorProto*) defaultInstance {
  return defaultEnumDescriptorProtoInstance;
}
- (NSArray*) valueList {
  return mutableValueList;
}
- (EnumValueDescriptorProto*) valueAtIndex:(int32_t) index {
  id value = [mutableValueList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (EnumValueDescriptorProto* element in self.valueList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  for (EnumValueDescriptorProto* element in self.valueList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:3 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  for (EnumValueDescriptorProto* element in self.valueList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(3, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EnumDescriptorProto*) parseFromData:(NSData*) data {
  return (EnumDescriptorProto*)[[[EnumDescriptorProto builder] mergeFromData:data] build];
}
+ (EnumDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumDescriptorProto*)[[[EnumDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EnumDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (EnumDescriptorProto*)[[[EnumDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (EnumDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumDescriptorProto*)[[[EnumDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EnumDescriptorProto*)[[[EnumDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (EnumDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumDescriptorProto*)[[[EnumDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumDescriptorProto_Builder*) builder {
  return [[[EnumDescriptorProto_Builder alloc] init] autorelease];
}
+ (EnumDescriptorProto_Builder*) builderWithPrototype:(EnumDescriptorProto*) prototype {
  return [[EnumDescriptorProto builder] mergeFrom:prototype];
}
- (EnumDescriptorProto_Builder*) builder {
  return [EnumDescriptorProto builder];
}
@end

@interface EnumDescriptorProto_Builder()
@property (retain) EnumDescriptorProto* result;
@end

@implementation EnumDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EnumDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EnumDescriptorProto_Builder*) clear {
  self.result = [[[EnumDescriptorProto alloc] init] autorelease];
  return self;
}
- (EnumDescriptorProto_Builder*) clone {
  return [EnumDescriptorProto builderWithPrototype:result];
}
- (EnumDescriptorProto*) defaultInstance {
  return [EnumDescriptorProto defaultInstance];
}
- (EnumDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EnumDescriptorProto*) buildPartial {
  EnumDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EnumDescriptorProto_Builder*) mergeFrom:(EnumDescriptorProto*) other {
  if (other == [EnumDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableValueList.count > 0) {
    if (result.mutableValueList == nil) {
      result.mutableValueList = [NSMutableArray array];
    }
    [result.mutableValueList addObjectsFromArray:other.mutableValueList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EnumDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EnumDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        EnumValueDescriptorProto_Builder* subBuilder = [EnumValueDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addValue:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        EnumOptions_Builder* subBuilder = [EnumOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (EnumDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (EnumDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSArray*) valueList {
  if (result.mutableValueList == nil) { return [NSArray array]; }
  return result.mutableValueList;
}
- (EnumValueDescriptorProto*) valueAtIndex:(int32_t) index {
  return [result valueAtIndex:index];
}
- (EnumDescriptorProto_Builder*) replaceValueAtIndex:(int32_t) index with:(EnumValueDescriptorProto*) value {
  [result.mutableValueList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (EnumDescriptorProto_Builder*) addAllValue:(NSArray*) values {
  if (result.mutableValueList == nil) {
    result.mutableValueList = [NSMutableArray array];
  }
  [result.mutableValueList addObjectsFromArray:values];
  return self;
}
- (EnumDescriptorProto_Builder*) clearValueList {
  result.mutableValueList = nil;
  return self;
}
- (EnumDescriptorProto_Builder*) addValue:(EnumValueDescriptorProto*) value {
  if (result.mutableValueList == nil) {
    result.mutableValueList = [NSMutableArray array];
  }
  [result.mutableValueList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (EnumOptions*) options {
  return result.options;
}
- (EnumDescriptorProto_Builder*) setOptions:(EnumOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (EnumDescriptorProto_Builder*) setOptionsBuilder:(EnumOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (EnumDescriptorProto_Builder*) mergeOptions:(EnumOptions*) value {
  if (result.hasOptions &&
      result.options != [EnumOptions defaultInstance]) {
    result.options =
      [[[EnumOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (EnumDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [EnumOptions defaultInstance];
  return self;
}
@end

@interface EnumValueDescriptorProto ()
@property (retain) NSString* name;
@property int32_t number;
@property (retain) EnumValueOptions* options;
@end

@implementation EnumValueDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNumber {
  return !!hasNumber_;
}
- (void) setHasNumber:(BOOL) value {
  hasNumber_ = !!value;
}
@synthesize number;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.number = 0;
    self.options = [EnumValueOptions defaultInstance];
  }
  return self;
}
static EnumValueDescriptorProto* defaultEnumValueDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [EnumValueDescriptorProto class]) {
    defaultEnumValueDescriptorProtoInstance = [[EnumValueDescriptorProto alloc] init];
  }
}
+ (EnumValueDescriptorProto*) defaultInstance {
  return defaultEnumValueDescriptorProtoInstance;
}
- (EnumValueDescriptorProto*) defaultInstance {
  return defaultEnumValueDescriptorProtoInstance;
}
- (BOOL) isInitialized {
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasNumber) {
    [output writeInt32:2 value:self.number];
  }
  if (self.hasOptions) {
    [output writeMessage:3 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasNumber) {
    size += computeInt32Size(2, self.number);
  }
  if (self.hasOptions) {
    size += computeMessageSize(3, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EnumValueDescriptorProto*) parseFromData:(NSData*) data {
  return (EnumValueDescriptorProto*)[[[EnumValueDescriptorProto builder] mergeFromData:data] build];
}
+ (EnumValueDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumValueDescriptorProto*)[[[EnumValueDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EnumValueDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (EnumValueDescriptorProto*)[[[EnumValueDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (EnumValueDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumValueDescriptorProto*)[[[EnumValueDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumValueDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EnumValueDescriptorProto*)[[[EnumValueDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (EnumValueDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumValueDescriptorProto*)[[[EnumValueDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumValueDescriptorProto_Builder*) builder {
  return [[[EnumValueDescriptorProto_Builder alloc] init] autorelease];
}
+ (EnumValueDescriptorProto_Builder*) builderWithPrototype:(EnumValueDescriptorProto*) prototype {
  return [[EnumValueDescriptorProto builder] mergeFrom:prototype];
}
- (EnumValueDescriptorProto_Builder*) builder {
  return [EnumValueDescriptorProto builder];
}
@end

@interface EnumValueDescriptorProto_Builder()
@property (retain) EnumValueDescriptorProto* result;
@end

@implementation EnumValueDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EnumValueDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EnumValueDescriptorProto_Builder*) clear {
  self.result = [[[EnumValueDescriptorProto alloc] init] autorelease];
  return self;
}
- (EnumValueDescriptorProto_Builder*) clone {
  return [EnumValueDescriptorProto builderWithPrototype:result];
}
- (EnumValueDescriptorProto*) defaultInstance {
  return [EnumValueDescriptorProto defaultInstance];
}
- (EnumValueDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EnumValueDescriptorProto*) buildPartial {
  EnumValueDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EnumValueDescriptorProto_Builder*) mergeFrom:(EnumValueDescriptorProto*) other {
  if (other == [EnumValueDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNumber) {
    [self setNumber:other.number];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EnumValueDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EnumValueDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 16: {
        [self setNumber:[input readInt32]];
        break;
      }
      case 26: {
        EnumValueOptions_Builder* subBuilder = [EnumValueOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (EnumValueDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (EnumValueDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNumber {
  return result.hasNumber;
}
- (int32_t) number {
  return result.number;
}
- (EnumValueDescriptorProto_Builder*) setNumber:(int32_t) value {
  result.hasNumber = YES;
  result.number = value;
  return self;
}
- (EnumValueDescriptorProto_Builder*) clearNumber {
  result.hasNumber = NO;
  result.number = 0;
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (EnumValueOptions*) options {
  return result.options;
}
- (EnumValueDescriptorProto_Builder*) setOptions:(EnumValueOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (EnumValueDescriptorProto_Builder*) setOptionsBuilder:(EnumValueOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (EnumValueDescriptorProto_Builder*) mergeOptions:(EnumValueOptions*) value {
  if (result.hasOptions &&
      result.options != [EnumValueOptions defaultInstance]) {
    result.options =
      [[[EnumValueOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (EnumValueDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [EnumValueOptions defaultInstance];
  return self;
}
@end

@interface ServiceDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSMutableArray* mutableMethodList;
@property (retain) ServiceOptions* options;
@end

@implementation ServiceDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
@synthesize mutableMethodList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.mutableMethodList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.options = [ServiceOptions defaultInstance];
  }
  return self;
}
static ServiceDescriptorProto* defaultServiceDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [ServiceDescriptorProto class]) {
    defaultServiceDescriptorProtoInstance = [[ServiceDescriptorProto alloc] init];
  }
}
+ (ServiceDescriptorProto*) defaultInstance {
  return defaultServiceDescriptorProtoInstance;
}
- (ServiceDescriptorProto*) defaultInstance {
  return defaultServiceDescriptorProtoInstance;
}
- (NSArray*) methodList {
  return mutableMethodList;
}
- (MethodDescriptorProto*) methodAtIndex:(int32_t) index {
  id value = [mutableMethodList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (MethodDescriptorProto* element in self.methodList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  for (MethodDescriptorProto* element in self.methodList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:3 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  for (MethodDescriptorProto* element in self.methodList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(3, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ServiceDescriptorProto*) parseFromData:(NSData*) data {
  return (ServiceDescriptorProto*)[[[ServiceDescriptorProto builder] mergeFromData:data] build];
}
+ (ServiceDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServiceDescriptorProto*)[[[ServiceDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ServiceDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (ServiceDescriptorProto*)[[[ServiceDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (ServiceDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServiceDescriptorProto*)[[[ServiceDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServiceDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ServiceDescriptorProto*)[[[ServiceDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (ServiceDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServiceDescriptorProto*)[[[ServiceDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServiceDescriptorProto_Builder*) builder {
  return [[[ServiceDescriptorProto_Builder alloc] init] autorelease];
}
+ (ServiceDescriptorProto_Builder*) builderWithPrototype:(ServiceDescriptorProto*) prototype {
  return [[ServiceDescriptorProto builder] mergeFrom:prototype];
}
- (ServiceDescriptorProto_Builder*) builder {
  return [ServiceDescriptorProto builder];
}
@end

@interface ServiceDescriptorProto_Builder()
@property (retain) ServiceDescriptorProto* result;
@end

@implementation ServiceDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ServiceDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ServiceDescriptorProto_Builder*) clear {
  self.result = [[[ServiceDescriptorProto alloc] init] autorelease];
  return self;
}
- (ServiceDescriptorProto_Builder*) clone {
  return [ServiceDescriptorProto builderWithPrototype:result];
}
- (ServiceDescriptorProto*) defaultInstance {
  return [ServiceDescriptorProto defaultInstance];
}
- (ServiceDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ServiceDescriptorProto*) buildPartial {
  ServiceDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ServiceDescriptorProto_Builder*) mergeFrom:(ServiceDescriptorProto*) other {
  if (other == [ServiceDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableMethodList.count > 0) {
    if (result.mutableMethodList == nil) {
      result.mutableMethodList = [NSMutableArray array];
    }
    [result.mutableMethodList addObjectsFromArray:other.mutableMethodList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ServiceDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ServiceDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        MethodDescriptorProto_Builder* subBuilder = [MethodDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMethod:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        ServiceOptions_Builder* subBuilder = [ServiceOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (ServiceDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (ServiceDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSArray*) methodList {
  if (result.mutableMethodList == nil) { return [NSArray array]; }
  return result.mutableMethodList;
}
- (MethodDescriptorProto*) methodAtIndex:(int32_t) index {
  return [result methodAtIndex:index];
}
- (ServiceDescriptorProto_Builder*) replaceMethodAtIndex:(int32_t) index with:(MethodDescriptorProto*) value {
  [result.mutableMethodList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ServiceDescriptorProto_Builder*) addAllMethod:(NSArray*) values {
  if (result.mutableMethodList == nil) {
    result.mutableMethodList = [NSMutableArray array];
  }
  [result.mutableMethodList addObjectsFromArray:values];
  return self;
}
- (ServiceDescriptorProto_Builder*) clearMethodList {
  result.mutableMethodList = nil;
  return self;
}
- (ServiceDescriptorProto_Builder*) addMethod:(MethodDescriptorProto*) value {
  if (result.mutableMethodList == nil) {
    result.mutableMethodList = [NSMutableArray array];
  }
  [result.mutableMethodList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (ServiceOptions*) options {
  return result.options;
}
- (ServiceDescriptorProto_Builder*) setOptions:(ServiceOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (ServiceDescriptorProto_Builder*) setOptionsBuilder:(ServiceOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (ServiceDescriptorProto_Builder*) mergeOptions:(ServiceOptions*) value {
  if (result.hasOptions &&
      result.options != [ServiceOptions defaultInstance]) {
    result.options =
      [[[ServiceOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (ServiceDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [ServiceOptions defaultInstance];
  return self;
}
@end

@interface MethodDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSString* inputType;
@property (retain) NSString* outputType;
@property (retain) MethodOptions* options;
@end

@implementation MethodDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasInputType {
  return !!hasInputType_;
}
- (void) setHasInputType:(BOOL) value {
  hasInputType_ = !!value;
}
@synthesize inputType;
- (BOOL) hasOutputType {
  return !!hasOutputType_;
}
- (void) setHasOutputType:(BOOL) value {
  hasOutputType_ = !!value;
}
@synthesize outputType;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.inputType = nil;
  self.outputType = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.inputType = @"";
    self.outputType = @"";
    self.options = [MethodOptions defaultInstance];
  }
  return self;
}
static MethodDescriptorProto* defaultMethodDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [MethodDescriptorProto class]) {
    defaultMethodDescriptorProtoInstance = [[MethodDescriptorProto alloc] init];
  }
}
+ (MethodDescriptorProto*) defaultInstance {
  return defaultMethodDescriptorProtoInstance;
}
- (MethodDescriptorProto*) defaultInstance {
  return defaultMethodDescriptorProtoInstance;
}
- (BOOL) isInitialized {
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasInputType) {
    [output writeString:2 value:self.inputType];
  }
  if (self.hasOutputType) {
    [output writeString:3 value:self.outputType];
  }
  if (self.hasOptions) {
    [output writeMessage:4 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasInputType) {
    size += computeStringSize(2, self.inputType);
  }
  if (self.hasOutputType) {
    size += computeStringSize(3, self.outputType);
  }
  if (self.hasOptions) {
    size += computeMessageSize(4, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MethodDescriptorProto*) parseFromData:(NSData*) data {
  return (MethodDescriptorProto*)[[[MethodDescriptorProto builder] mergeFromData:data] build];
}
+ (MethodDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MethodDescriptorProto*)[[[MethodDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MethodDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (MethodDescriptorProto*)[[[MethodDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (MethodDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MethodDescriptorProto*)[[[MethodDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MethodDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MethodDescriptorProto*)[[[MethodDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (MethodDescriptorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MethodDescriptorProto*)[[[MethodDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MethodDescriptorProto_Builder*) builder {
  return [[[MethodDescriptorProto_Builder alloc] init] autorelease];
}
+ (MethodDescriptorProto_Builder*) builderWithPrototype:(MethodDescriptorProto*) prototype {
  return [[MethodDescriptorProto builder] mergeFrom:prototype];
}
- (MethodDescriptorProto_Builder*) builder {
  return [MethodDescriptorProto builder];
}
@end

@interface MethodDescriptorProto_Builder()
@property (retain) MethodDescriptorProto* result;
@end

@implementation MethodDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MethodDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MethodDescriptorProto_Builder*) clear {
  self.result = [[[MethodDescriptorProto alloc] init] autorelease];
  return self;
}
- (MethodDescriptorProto_Builder*) clone {
  return [MethodDescriptorProto builderWithPrototype:result];
}
- (MethodDescriptorProto*) defaultInstance {
  return [MethodDescriptorProto defaultInstance];
}
- (MethodDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MethodDescriptorProto*) buildPartial {
  MethodDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MethodDescriptorProto_Builder*) mergeFrom:(MethodDescriptorProto*) other {
  if (other == [MethodDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasInputType) {
    [self setInputType:other.inputType];
  }
  if (other.hasOutputType) {
    [self setOutputType:other.outputType];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MethodDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MethodDescriptorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setInputType:[input readString]];
        break;
      }
      case 26: {
        [self setOutputType:[input readString]];
        break;
      }
      case 34: {
        MethodOptions_Builder* subBuilder = [MethodOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MethodDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MethodDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasInputType {
  return result.hasInputType;
}
- (NSString*) inputType {
  return result.inputType;
}
- (MethodDescriptorProto_Builder*) setInputType:(NSString*) value {
  result.hasInputType = YES;
  result.inputType = value;
  return self;
}
- (MethodDescriptorProto_Builder*) clearInputType {
  result.hasInputType = NO;
  result.inputType = @"";
  return self;
}
- (BOOL) hasOutputType {
  return result.hasOutputType;
}
- (NSString*) outputType {
  return result.outputType;
}
- (MethodDescriptorProto_Builder*) setOutputType:(NSString*) value {
  result.hasOutputType = YES;
  result.outputType = value;
  return self;
}
- (MethodDescriptorProto_Builder*) clearOutputType {
  result.hasOutputType = NO;
  result.outputType = @"";
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (MethodOptions*) options {
  return result.options;
}
- (MethodDescriptorProto_Builder*) setOptions:(MethodOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (MethodDescriptorProto_Builder*) setOptionsBuilder:(MethodOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (MethodDescriptorProto_Builder*) mergeOptions:(MethodOptions*) value {
  if (result.hasOptions &&
      result.options != [MethodOptions defaultInstance]) {
    result.options =
      [[[MethodOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (MethodDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [MethodOptions defaultInstance];
  return self;
}
@end

@interface FileOptions ()
@property (retain) NSString* javaPackage;
@property (retain) NSString* javaOuterClassname;
@property BOOL javaMultipleFiles;
@property FileOptions_OptimizeMode optimizeFor;
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation FileOptions

- (BOOL) hasJavaPackage {
  return !!hasJavaPackage_;
}
- (void) setHasJavaPackage:(BOOL) value {
  hasJavaPackage_ = !!value;
}
@synthesize javaPackage;
- (BOOL) hasJavaOuterClassname {
  return !!hasJavaOuterClassname_;
}
- (void) setHasJavaOuterClassname:(BOOL) value {
  hasJavaOuterClassname_ = !!value;
}
@synthesize javaOuterClassname;
- (BOOL) hasJavaMultipleFiles {
  return !!hasJavaMultipleFiles_;
}
- (void) setHasJavaMultipleFiles:(BOOL) value {
  hasJavaMultipleFiles_ = !!value;
}
- (BOOL) javaMultipleFiles {
  return !!javaMultipleFiles_;
}
- (void) setJavaMultipleFiles:(BOOL) value {
  javaMultipleFiles_ = !!value;
}
- (BOOL) hasOptimizeFor {
  return !!hasOptimizeFor_;
}
- (void) setHasOptimizeFor:(BOOL) value {
  hasOptimizeFor_ = !!value;
}
@synthesize optimizeFor;
@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.javaPackage = nil;
  self.javaOuterClassname = nil;
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.javaPackage = @"";
    self.javaOuterClassname = @"";
    self.javaMultipleFiles = NO;
    self.optimizeFor = FileOptions_OptimizeModeSpeed;
  }
  return self;
}
static FileOptions* defaultFileOptionsInstance = nil;
+ (void) initialize {
  if (self == [FileOptions class]) {
    defaultFileOptionsInstance = [[FileOptions alloc] init];
  }
}
+ (FileOptions*) defaultInstance {
  return defaultFileOptionsInstance;
}
- (FileOptions*) defaultInstance {
  return defaultFileOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJavaPackage) {
    [output writeString:1 value:self.javaPackage];
  }
  if (self.hasJavaOuterClassname) {
    [output writeString:8 value:self.javaOuterClassname];
  }
  if (self.hasOptimizeFor) {
    [output writeEnum:9 value:self.optimizeFor];
  }
  if (self.hasJavaMultipleFiles) {
    [output writeBool:10 value:self.javaMultipleFiles];
  }
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJavaPackage) {
    size += computeStringSize(1, self.javaPackage);
  }
  if (self.hasJavaOuterClassname) {
    size += computeStringSize(8, self.javaOuterClassname);
  }
  if (self.hasOptimizeFor) {
    size += computeEnumSize(9, self.optimizeFor);
  }
  if (self.hasJavaMultipleFiles) {
    size += computeBoolSize(10, self.javaMultipleFiles);
  }
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileOptions*) parseFromData:(NSData*) data {
  return (FileOptions*)[[[FileOptions builder] mergeFromData:data] build];
}
+ (FileOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileOptions*)[[[FileOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileOptions*) parseFromInputStream:(NSInputStream*) input {
  return (FileOptions*)[[[FileOptions builder] mergeFromInputStream:input] build];
}
+ (FileOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileOptions*)[[[FileOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileOptions*)[[[FileOptions builder] mergeFromCodedInputStream:input] build];
}
+ (FileOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileOptions*)[[[FileOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileOptions_Builder*) builder {
  return [[[FileOptions_Builder alloc] init] autorelease];
}
+ (FileOptions_Builder*) builderWithPrototype:(FileOptions*) prototype {
  return [[FileOptions builder] mergeFrom:prototype];
}
- (FileOptions_Builder*) builder {
  return [FileOptions builder];
}
@end

BOOL FileOptions_OptimizeModeIsValidValue(FileOptions_OptimizeMode value) {
  switch (value) {
    case FileOptions_OptimizeModeSpeed:
    case FileOptions_OptimizeModeCodeSize:
    case FileOptions_OptimizeModeLiteRuntime:
      return YES;
    default:
      return NO;
  }
}
@interface FileOptions_Builder()
@property (retain) FileOptions* result;
@end

@implementation FileOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FileOptions alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (FileOptions_Builder*) clear {
  self.result = [[[FileOptions alloc] init] autorelease];
  return self;
}
- (FileOptions_Builder*) clone {
  return [FileOptions builderWithPrototype:result];
}
- (FileOptions*) defaultInstance {
  return [FileOptions defaultInstance];
}
- (FileOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileOptions*) buildPartial {
  FileOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FileOptions_Builder*) mergeFrom:(FileOptions*) other {
  if (other == [FileOptions defaultInstance]) {
    return self;
  }
  if (other.hasJavaPackage) {
    [self setJavaPackage:other.javaPackage];
  }
  if (other.hasJavaOuterClassname) {
    [self setJavaOuterClassname:other.javaOuterClassname];
  }
  if (other.hasJavaMultipleFiles) {
    [self setJavaMultipleFiles:other.javaMultipleFiles];
  }
  if (other.hasOptimizeFor) {
    [self setOptimizeFor:other.optimizeFor];
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setJavaPackage:[input readString]];
        break;
      }
      case 66: {
        [self setJavaOuterClassname:[input readString]];
        break;
      }
      case 72: {
        int32_t value = [input readEnum];
        if (FileOptions_OptimizeModeIsValidValue(value)) {
          [self setOptimizeFor:value];
        } else {
          [unknownFields mergeVarintField:9 value:value];
        }
        break;
      }
      case 80: {
        [self setJavaMultipleFiles:[input readBool]];
        break;
      }
      case 7994: {
        UninterpretedOption_Builder* subBuilder = [UninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasJavaPackage {
  return result.hasJavaPackage;
}
- (NSString*) javaPackage {
  return result.javaPackage;
}
- (FileOptions_Builder*) setJavaPackage:(NSString*) value {
  result.hasJavaPackage = YES;
  result.javaPackage = value;
  return self;
}
- (FileOptions_Builder*) clearJavaPackage {
  result.hasJavaPackage = NO;
  result.javaPackage = @"";
  return self;
}
- (BOOL) hasJavaOuterClassname {
  return result.hasJavaOuterClassname;
}
- (NSString*) javaOuterClassname {
  return result.javaOuterClassname;
}
- (FileOptions_Builder*) setJavaOuterClassname:(NSString*) value {
  result.hasJavaOuterClassname = YES;
  result.javaOuterClassname = value;
  return self;
}
- (FileOptions_Builder*) clearJavaOuterClassname {
  result.hasJavaOuterClassname = NO;
  result.javaOuterClassname = @"";
  return self;
}
- (BOOL) hasJavaMultipleFiles {
  return result.hasJavaMultipleFiles;
}
- (BOOL) javaMultipleFiles {
  return result.javaMultipleFiles;
}
- (FileOptions_Builder*) setJavaMultipleFiles:(BOOL) value {
  result.hasJavaMultipleFiles = YES;
  result.javaMultipleFiles = value;
  return self;
}
- (FileOptions_Builder*) clearJavaMultipleFiles {
  result.hasJavaMultipleFiles = NO;
  result.javaMultipleFiles = NO;
  return self;
}
- (BOOL) hasOptimizeFor {
  return result.hasOptimizeFor;
}
- (FileOptions_OptimizeMode) optimizeFor {
  return result.optimizeFor;
}
- (FileOptions_Builder*) setOptimizeFor:(FileOptions_OptimizeMode) value {
  result.hasOptimizeFor = YES;
  result.optimizeFor = value;
  return self;
}
- (FileOptions_Builder*) clearOptimizeFor {
  result.hasOptimizeFor = NO;
  result.optimizeFor = FileOptions_OptimizeModeSpeed;
  return self;
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (FileOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(UninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (FileOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (FileOptions_Builder*) addUninterpretedOption:(UninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface MessageOptions ()
@property BOOL messageSetWireFormat;
@property BOOL noStandardDescriptorAccessor;
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation MessageOptions

- (BOOL) hasMessageSetWireFormat {
  return !!hasMessageSetWireFormat_;
}
- (void) setHasMessageSetWireFormat:(BOOL) value {
  hasMessageSetWireFormat_ = !!value;
}
- (BOOL) messageSetWireFormat {
  return !!messageSetWireFormat_;
}
- (void) setMessageSetWireFormat:(BOOL) value {
  messageSetWireFormat_ = !!value;
}
- (BOOL) hasNoStandardDescriptorAccessor {
  return !!hasNoStandardDescriptorAccessor_;
}
- (void) setHasNoStandardDescriptorAccessor:(BOOL) value {
  hasNoStandardDescriptorAccessor_ = !!value;
}
- (BOOL) noStandardDescriptorAccessor {
  return !!noStandardDescriptorAccessor_;
}
- (void) setNoStandardDescriptorAccessor:(BOOL) value {
  noStandardDescriptorAccessor_ = !!value;
}
@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.messageSetWireFormat = NO;
    self.noStandardDescriptorAccessor = NO;
  }
  return self;
}
static MessageOptions* defaultMessageOptionsInstance = nil;
+ (void) initialize {
  if (self == [MessageOptions class]) {
    defaultMessageOptionsInstance = [[MessageOptions alloc] init];
  }
}
+ (MessageOptions*) defaultInstance {
  return defaultMessageOptionsInstance;
}
- (MessageOptions*) defaultInstance {
  return defaultMessageOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMessageSetWireFormat) {
    [output writeBool:1 value:self.messageSetWireFormat];
  }
  if (self.hasNoStandardDescriptorAccessor) {
    [output writeBool:2 value:self.noStandardDescriptorAccessor];
  }
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMessageSetWireFormat) {
    size += computeBoolSize(1, self.messageSetWireFormat);
  }
  if (self.hasNoStandardDescriptorAccessor) {
    size += computeBoolSize(2, self.noStandardDescriptorAccessor);
  }
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MessageOptions*) parseFromData:(NSData*) data {
  return (MessageOptions*)[[[MessageOptions builder] mergeFromData:data] build];
}
+ (MessageOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageOptions*)[[[MessageOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageOptions*) parseFromInputStream:(NSInputStream*) input {
  return (MessageOptions*)[[[MessageOptions builder] mergeFromInputStream:input] build];
}
+ (MessageOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageOptions*)[[[MessageOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageOptions*)[[[MessageOptions builder] mergeFromCodedInputStream:input] build];
}
+ (MessageOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageOptions*)[[[MessageOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageOptions_Builder*) builder {
  return [[[MessageOptions_Builder alloc] init] autorelease];
}
+ (MessageOptions_Builder*) builderWithPrototype:(MessageOptions*) prototype {
  return [[MessageOptions builder] mergeFrom:prototype];
}
- (MessageOptions_Builder*) builder {
  return [MessageOptions builder];
}
@end

@interface MessageOptions_Builder()
@property (retain) MessageOptions* result;
@end

@implementation MessageOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MessageOptions alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (MessageOptions_Builder*) clear {
  self.result = [[[MessageOptions alloc] init] autorelease];
  return self;
}
- (MessageOptions_Builder*) clone {
  return [MessageOptions builderWithPrototype:result];
}
- (MessageOptions*) defaultInstance {
  return [MessageOptions defaultInstance];
}
- (MessageOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageOptions*) buildPartial {
  MessageOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MessageOptions_Builder*) mergeFrom:(MessageOptions*) other {
  if (other == [MessageOptions defaultInstance]) {
    return self;
  }
  if (other.hasMessageSetWireFormat) {
    [self setMessageSetWireFormat:other.messageSetWireFormat];
  }
  if (other.hasNoStandardDescriptorAccessor) {
    [self setNoStandardDescriptorAccessor:other.noStandardDescriptorAccessor];
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMessageSetWireFormat:[input readBool]];
        break;
      }
      case 16: {
        [self setNoStandardDescriptorAccessor:[input readBool]];
        break;
      }
      case 7994: {
        UninterpretedOption_Builder* subBuilder = [UninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasMessageSetWireFormat {
  return result.hasMessageSetWireFormat;
}
- (BOOL) messageSetWireFormat {
  return result.messageSetWireFormat;
}
- (MessageOptions_Builder*) setMessageSetWireFormat:(BOOL) value {
  result.hasMessageSetWireFormat = YES;
  result.messageSetWireFormat = value;
  return self;
}
- (MessageOptions_Builder*) clearMessageSetWireFormat {
  result.hasMessageSetWireFormat = NO;
  result.messageSetWireFormat = NO;
  return self;
}
- (BOOL) hasNoStandardDescriptorAccessor {
  return result.hasNoStandardDescriptorAccessor;
}
- (BOOL) noStandardDescriptorAccessor {
  return result.noStandardDescriptorAccessor;
}
- (MessageOptions_Builder*) setNoStandardDescriptorAccessor:(BOOL) value {
  result.hasNoStandardDescriptorAccessor = YES;
  result.noStandardDescriptorAccessor = value;
  return self;
}
- (MessageOptions_Builder*) clearNoStandardDescriptorAccessor {
  result.hasNoStandardDescriptorAccessor = NO;
  result.noStandardDescriptorAccessor = NO;
  return self;
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (MessageOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(UninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MessageOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (MessageOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (MessageOptions_Builder*) addUninterpretedOption:(UninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface FieldOptions ()
@property FieldOptions_CType ctype;
@property BOOL packed;
@property BOOL deprecated;
@property (retain) NSString* experimentalMapKey;
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation FieldOptions

- (BOOL) hasCtype {
  return !!hasCtype_;
}
- (void) setHasCtype:(BOOL) value {
  hasCtype_ = !!value;
}
@synthesize ctype;
- (BOOL) hasPacked {
  return !!hasPacked_;
}
- (void) setHasPacked:(BOOL) value {
  hasPacked_ = !!value;
}
- (BOOL) packed {
  return !!packed_;
}
- (void) setPacked:(BOOL) value {
  packed_ = !!value;
}
- (BOOL) hasDeprecated {
  return !!hasDeprecated_;
}
- (void) setHasDeprecated:(BOOL) value {
  hasDeprecated_ = !!value;
}
- (BOOL) deprecated {
  return !!deprecated_;
}
- (void) setDeprecated:(BOOL) value {
  deprecated_ = !!value;
}
- (BOOL) hasExperimentalMapKey {
  return !!hasExperimentalMapKey_;
}
- (void) setHasExperimentalMapKey:(BOOL) value {
  hasExperimentalMapKey_ = !!value;
}
@synthesize experimentalMapKey;
@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.experimentalMapKey = nil;
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.ctype = FieldOptions_CTypeCord;
    self.packed = NO;
    self.deprecated = NO;
    self.experimentalMapKey = @"";
  }
  return self;
}
static FieldOptions* defaultFieldOptionsInstance = nil;
+ (void) initialize {
  if (self == [FieldOptions class]) {
    defaultFieldOptionsInstance = [[FieldOptions alloc] init];
  }
}
+ (FieldOptions*) defaultInstance {
  return defaultFieldOptionsInstance;
}
- (FieldOptions*) defaultInstance {
  return defaultFieldOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCtype) {
    [output writeEnum:1 value:self.ctype];
  }
  if (self.hasPacked) {
    [output writeBool:2 value:self.packed];
  }
  if (self.hasDeprecated) {
    [output writeBool:3 value:self.deprecated];
  }
  if (self.hasExperimentalMapKey) {
    [output writeString:9 value:self.experimentalMapKey];
  }
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCtype) {
    size += computeEnumSize(1, self.ctype);
  }
  if (self.hasPacked) {
    size += computeBoolSize(2, self.packed);
  }
  if (self.hasDeprecated) {
    size += computeBoolSize(3, self.deprecated);
  }
  if (self.hasExperimentalMapKey) {
    size += computeStringSize(9, self.experimentalMapKey);
  }
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FieldOptions*) parseFromData:(NSData*) data {
  return (FieldOptions*)[[[FieldOptions builder] mergeFromData:data] build];
}
+ (FieldOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FieldOptions*)[[[FieldOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FieldOptions*) parseFromInputStream:(NSInputStream*) input {
  return (FieldOptions*)[[[FieldOptions builder] mergeFromInputStream:input] build];
}
+ (FieldOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FieldOptions*)[[[FieldOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FieldOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FieldOptions*)[[[FieldOptions builder] mergeFromCodedInputStream:input] build];
}
+ (FieldOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FieldOptions*)[[[FieldOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FieldOptions_Builder*) builder {
  return [[[FieldOptions_Builder alloc] init] autorelease];
}
+ (FieldOptions_Builder*) builderWithPrototype:(FieldOptions*) prototype {
  return [[FieldOptions builder] mergeFrom:prototype];
}
- (FieldOptions_Builder*) builder {
  return [FieldOptions builder];
}
@end

BOOL FieldOptions_CTypeIsValidValue(FieldOptions_CType value) {
  switch (value) {
    case FieldOptions_CTypeCord:
    case FieldOptions_CTypeStringPiece:
      return YES;
    default:
      return NO;
  }
}
@interface FieldOptions_Builder()
@property (retain) FieldOptions* result;
@end

@implementation FieldOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FieldOptions alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (FieldOptions_Builder*) clear {
  self.result = [[[FieldOptions alloc] init] autorelease];
  return self;
}
- (FieldOptions_Builder*) clone {
  return [FieldOptions builderWithPrototype:result];
}
- (FieldOptions*) defaultInstance {
  return [FieldOptions defaultInstance];
}
- (FieldOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FieldOptions*) buildPartial {
  FieldOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FieldOptions_Builder*) mergeFrom:(FieldOptions*) other {
  if (other == [FieldOptions defaultInstance]) {
    return self;
  }
  if (other.hasCtype) {
    [self setCtype:other.ctype];
  }
  if (other.hasPacked) {
    [self setPacked:other.packed];
  }
  if (other.hasDeprecated) {
    [self setDeprecated:other.deprecated];
  }
  if (other.hasExperimentalMapKey) {
    [self setExperimentalMapKey:other.experimentalMapKey];
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FieldOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FieldOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (FieldOptions_CTypeIsValidValue(value)) {
          [self setCtype:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setPacked:[input readBool]];
        break;
      }
      case 24: {
        [self setDeprecated:[input readBool]];
        break;
      }
      case 74: {
        [self setExperimentalMapKey:[input readString]];
        break;
      }
      case 7994: {
        UninterpretedOption_Builder* subBuilder = [UninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCtype {
  return result.hasCtype;
}
- (FieldOptions_CType) ctype {
  return result.ctype;
}
- (FieldOptions_Builder*) setCtype:(FieldOptions_CType) value {
  result.hasCtype = YES;
  result.ctype = value;
  return self;
}
- (FieldOptions_Builder*) clearCtype {
  result.hasCtype = NO;
  result.ctype = FieldOptions_CTypeCord;
  return self;
}
- (BOOL) hasPacked {
  return result.hasPacked;
}
- (BOOL) packed {
  return result.packed;
}
- (FieldOptions_Builder*) setPacked:(BOOL) value {
  result.hasPacked = YES;
  result.packed = value;
  return self;
}
- (FieldOptions_Builder*) clearPacked {
  result.hasPacked = NO;
  result.packed = NO;
  return self;
}
- (BOOL) hasDeprecated {
  return result.hasDeprecated;
}
- (BOOL) deprecated {
  return result.deprecated;
}
- (FieldOptions_Builder*) setDeprecated:(BOOL) value {
  result.hasDeprecated = YES;
  result.deprecated = value;
  return self;
}
- (FieldOptions_Builder*) clearDeprecated {
  result.hasDeprecated = NO;
  result.deprecated = NO;
  return self;
}
- (BOOL) hasExperimentalMapKey {
  return result.hasExperimentalMapKey;
}
- (NSString*) experimentalMapKey {
  return result.experimentalMapKey;
}
- (FieldOptions_Builder*) setExperimentalMapKey:(NSString*) value {
  result.hasExperimentalMapKey = YES;
  result.experimentalMapKey = value;
  return self;
}
- (FieldOptions_Builder*) clearExperimentalMapKey {
  result.hasExperimentalMapKey = NO;
  result.experimentalMapKey = @"";
  return self;
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (FieldOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(UninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FieldOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (FieldOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (FieldOptions_Builder*) addUninterpretedOption:(UninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface EnumOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation EnumOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static EnumOptions* defaultEnumOptionsInstance = nil;
+ (void) initialize {
  if (self == [EnumOptions class]) {
    defaultEnumOptionsInstance = [[EnumOptions alloc] init];
  }
}
+ (EnumOptions*) defaultInstance {
  return defaultEnumOptionsInstance;
}
- (EnumOptions*) defaultInstance {
  return defaultEnumOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EnumOptions*) parseFromData:(NSData*) data {
  return (EnumOptions*)[[[EnumOptions builder] mergeFromData:data] build];
}
+ (EnumOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumOptions*)[[[EnumOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EnumOptions*) parseFromInputStream:(NSInputStream*) input {
  return (EnumOptions*)[[[EnumOptions builder] mergeFromInputStream:input] build];
}
+ (EnumOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumOptions*)[[[EnumOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EnumOptions*)[[[EnumOptions builder] mergeFromCodedInputStream:input] build];
}
+ (EnumOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumOptions*)[[[EnumOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumOptions_Builder*) builder {
  return [[[EnumOptions_Builder alloc] init] autorelease];
}
+ (EnumOptions_Builder*) builderWithPrototype:(EnumOptions*) prototype {
  return [[EnumOptions builder] mergeFrom:prototype];
}
- (EnumOptions_Builder*) builder {
  return [EnumOptions builder];
}
@end

@interface EnumOptions_Builder()
@property (retain) EnumOptions* result;
@end

@implementation EnumOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EnumOptions alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (EnumOptions_Builder*) clear {
  self.result = [[[EnumOptions alloc] init] autorelease];
  return self;
}
- (EnumOptions_Builder*) clone {
  return [EnumOptions builderWithPrototype:result];
}
- (EnumOptions*) defaultInstance {
  return [EnumOptions defaultInstance];
}
- (EnumOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EnumOptions*) buildPartial {
  EnumOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EnumOptions_Builder*) mergeFrom:(EnumOptions*) other {
  if (other == [EnumOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EnumOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EnumOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        UninterpretedOption_Builder* subBuilder = [UninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (EnumOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(UninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (EnumOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (EnumOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (EnumOptions_Builder*) addUninterpretedOption:(UninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface EnumValueOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation EnumValueOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static EnumValueOptions* defaultEnumValueOptionsInstance = nil;
+ (void) initialize {
  if (self == [EnumValueOptions class]) {
    defaultEnumValueOptionsInstance = [[EnumValueOptions alloc] init];
  }
}
+ (EnumValueOptions*) defaultInstance {
  return defaultEnumValueOptionsInstance;
}
- (EnumValueOptions*) defaultInstance {
  return defaultEnumValueOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EnumValueOptions*) parseFromData:(NSData*) data {
  return (EnumValueOptions*)[[[EnumValueOptions builder] mergeFromData:data] build];
}
+ (EnumValueOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumValueOptions*)[[[EnumValueOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EnumValueOptions*) parseFromInputStream:(NSInputStream*) input {
  return (EnumValueOptions*)[[[EnumValueOptions builder] mergeFromInputStream:input] build];
}
+ (EnumValueOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumValueOptions*)[[[EnumValueOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumValueOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EnumValueOptions*)[[[EnumValueOptions builder] mergeFromCodedInputStream:input] build];
}
+ (EnumValueOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnumValueOptions*)[[[EnumValueOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnumValueOptions_Builder*) builder {
  return [[[EnumValueOptions_Builder alloc] init] autorelease];
}
+ (EnumValueOptions_Builder*) builderWithPrototype:(EnumValueOptions*) prototype {
  return [[EnumValueOptions builder] mergeFrom:prototype];
}
- (EnumValueOptions_Builder*) builder {
  return [EnumValueOptions builder];
}
@end

@interface EnumValueOptions_Builder()
@property (retain) EnumValueOptions* result;
@end

@implementation EnumValueOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EnumValueOptions alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (EnumValueOptions_Builder*) clear {
  self.result = [[[EnumValueOptions alloc] init] autorelease];
  return self;
}
- (EnumValueOptions_Builder*) clone {
  return [EnumValueOptions builderWithPrototype:result];
}
- (EnumValueOptions*) defaultInstance {
  return [EnumValueOptions defaultInstance];
}
- (EnumValueOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EnumValueOptions*) buildPartial {
  EnumValueOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EnumValueOptions_Builder*) mergeFrom:(EnumValueOptions*) other {
  if (other == [EnumValueOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EnumValueOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EnumValueOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        UninterpretedOption_Builder* subBuilder = [UninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (EnumValueOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(UninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (EnumValueOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (EnumValueOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (EnumValueOptions_Builder*) addUninterpretedOption:(UninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface ServiceOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation ServiceOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static ServiceOptions* defaultServiceOptionsInstance = nil;
+ (void) initialize {
  if (self == [ServiceOptions class]) {
    defaultServiceOptionsInstance = [[ServiceOptions alloc] init];
  }
}
+ (ServiceOptions*) defaultInstance {
  return defaultServiceOptionsInstance;
}
- (ServiceOptions*) defaultInstance {
  return defaultServiceOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ServiceOptions*) parseFromData:(NSData*) data {
  return (ServiceOptions*)[[[ServiceOptions builder] mergeFromData:data] build];
}
+ (ServiceOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServiceOptions*)[[[ServiceOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ServiceOptions*) parseFromInputStream:(NSInputStream*) input {
  return (ServiceOptions*)[[[ServiceOptions builder] mergeFromInputStream:input] build];
}
+ (ServiceOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServiceOptions*)[[[ServiceOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServiceOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ServiceOptions*)[[[ServiceOptions builder] mergeFromCodedInputStream:input] build];
}
+ (ServiceOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServiceOptions*)[[[ServiceOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServiceOptions_Builder*) builder {
  return [[[ServiceOptions_Builder alloc] init] autorelease];
}
+ (ServiceOptions_Builder*) builderWithPrototype:(ServiceOptions*) prototype {
  return [[ServiceOptions builder] mergeFrom:prototype];
}
- (ServiceOptions_Builder*) builder {
  return [ServiceOptions builder];
}
@end

@interface ServiceOptions_Builder()
@property (retain) ServiceOptions* result;
@end

@implementation ServiceOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ServiceOptions alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (ServiceOptions_Builder*) clear {
  self.result = [[[ServiceOptions alloc] init] autorelease];
  return self;
}
- (ServiceOptions_Builder*) clone {
  return [ServiceOptions builderWithPrototype:result];
}
- (ServiceOptions*) defaultInstance {
  return [ServiceOptions defaultInstance];
}
- (ServiceOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ServiceOptions*) buildPartial {
  ServiceOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ServiceOptions_Builder*) mergeFrom:(ServiceOptions*) other {
  if (other == [ServiceOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ServiceOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ServiceOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        UninterpretedOption_Builder* subBuilder = [UninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (ServiceOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(UninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ServiceOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (ServiceOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (ServiceOptions_Builder*) addUninterpretedOption:(UninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface MethodOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation MethodOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MethodOptions* defaultMethodOptionsInstance = nil;
+ (void) initialize {
  if (self == [MethodOptions class]) {
    defaultMethodOptionsInstance = [[MethodOptions alloc] init];
  }
}
+ (MethodOptions*) defaultInstance {
  return defaultMethodOptionsInstance;
}
- (MethodOptions*) defaultInstance {
  return defaultMethodOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (UninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MethodOptions*) parseFromData:(NSData*) data {
  return (MethodOptions*)[[[MethodOptions builder] mergeFromData:data] build];
}
+ (MethodOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MethodOptions*)[[[MethodOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MethodOptions*) parseFromInputStream:(NSInputStream*) input {
  return (MethodOptions*)[[[MethodOptions builder] mergeFromInputStream:input] build];
}
+ (MethodOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MethodOptions*)[[[MethodOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MethodOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MethodOptions*)[[[MethodOptions builder] mergeFromCodedInputStream:input] build];
}
+ (MethodOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MethodOptions*)[[[MethodOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MethodOptions_Builder*) builder {
  return [[[MethodOptions_Builder alloc] init] autorelease];
}
+ (MethodOptions_Builder*) builderWithPrototype:(MethodOptions*) prototype {
  return [[MethodOptions builder] mergeFrom:prototype];
}
- (MethodOptions_Builder*) builder {
  return [MethodOptions builder];
}
@end

@interface MethodOptions_Builder()
@property (retain) MethodOptions* result;
@end

@implementation MethodOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MethodOptions alloc] init] autorelease];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (MethodOptions_Builder*) clear {
  self.result = [[[MethodOptions alloc] init] autorelease];
  return self;
}
- (MethodOptions_Builder*) clone {
  return [MethodOptions builderWithPrototype:result];
}
- (MethodOptions*) defaultInstance {
  return [MethodOptions defaultInstance];
}
- (MethodOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MethodOptions*) buildPartial {
  MethodOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MethodOptions_Builder*) mergeFrom:(MethodOptions*) other {
  if (other == [MethodOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MethodOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MethodOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        UninterpretedOption_Builder* subBuilder = [UninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (UninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (MethodOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(UninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MethodOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (MethodOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (MethodOptions_Builder*) addUninterpretedOption:(UninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface UninterpretedOption ()
@property (retain) NSMutableArray* mutableNameList;
@property (retain) NSString* identifierValue;
@property int64_t positiveIntValue;
@property int64_t negativeIntValue;
@property Float64 doubleValue;
@property (retain) NSData* stringValue;
@end

@implementation UninterpretedOption

@synthesize mutableNameList;
- (BOOL) hasIdentifierValue {
  return !!hasIdentifierValue_;
}
- (void) setHasIdentifierValue:(BOOL) value {
  hasIdentifierValue_ = !!value;
}
@synthesize identifierValue;
- (BOOL) hasPositiveIntValue {
  return !!hasPositiveIntValue_;
}
- (void) setHasPositiveIntValue:(BOOL) value {
  hasPositiveIntValue_ = !!value;
}
@synthesize positiveIntValue;
- (BOOL) hasNegativeIntValue {
  return !!hasNegativeIntValue_;
}
- (void) setHasNegativeIntValue:(BOOL) value {
  hasNegativeIntValue_ = !!value;
}
@synthesize negativeIntValue;
- (BOOL) hasDoubleValue {
  return !!hasDoubleValue_;
}
- (void) setHasDoubleValue:(BOOL) value {
  hasDoubleValue_ = !!value;
}
@synthesize doubleValue;
- (BOOL) hasStringValue {
  return !!hasStringValue_;
}
- (void) setHasStringValue:(BOOL) value {
  hasStringValue_ = !!value;
}
@synthesize stringValue;
- (void) dealloc {
  self.mutableNameList = nil;
  self.identifierValue = nil;
  self.stringValue = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.identifierValue = @"";
    self.positiveIntValue = 0L;
    self.negativeIntValue = 0L;
    self.doubleValue = 0;
    self.stringValue = [NSData data];
  }
  return self;
}
static UninterpretedOption* defaultUninterpretedOptionInstance = nil;
+ (void) initialize {
  if (self == [UninterpretedOption class]) {
    defaultUninterpretedOptionInstance = [[UninterpretedOption alloc] init];
  }
}
+ (UninterpretedOption*) defaultInstance {
  return defaultUninterpretedOptionInstance;
}
- (UninterpretedOption*) defaultInstance {
  return defaultUninterpretedOptionInstance;
}
- (NSArray*) nameList {
  return mutableNameList;
}
- (UninterpretedOption_NamePart*) nameAtIndex:(int32_t) index {
  id value = [mutableNameList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (UninterpretedOption_NamePart* element in self.nameList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (UninterpretedOption_NamePart* element in self.nameList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasIdentifierValue) {
    [output writeString:3 value:self.identifierValue];
  }
  if (self.hasPositiveIntValue) {
    [output writeUInt64:4 value:self.positiveIntValue];
  }
  if (self.hasNegativeIntValue) {
    [output writeInt64:5 value:self.negativeIntValue];
  }
  if (self.hasDoubleValue) {
    [output writeDouble:6 value:self.doubleValue];
  }
  if (self.hasStringValue) {
    [output writeData:7 value:self.stringValue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (UninterpretedOption_NamePart* element in self.nameList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasIdentifierValue) {
    size += computeStringSize(3, self.identifierValue);
  }
  if (self.hasPositiveIntValue) {
    size += computeUInt64Size(4, self.positiveIntValue);
  }
  if (self.hasNegativeIntValue) {
    size += computeInt64Size(5, self.negativeIntValue);
  }
  if (self.hasDoubleValue) {
    size += computeDoubleSize(6, self.doubleValue);
  }
  if (self.hasStringValue) {
    size += computeDataSize(7, self.stringValue);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UninterpretedOption*) parseFromData:(NSData*) data {
  return (UninterpretedOption*)[[[UninterpretedOption builder] mergeFromData:data] build];
}
+ (UninterpretedOption*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UninterpretedOption*)[[[UninterpretedOption builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UninterpretedOption*) parseFromInputStream:(NSInputStream*) input {
  return (UninterpretedOption*)[[[UninterpretedOption builder] mergeFromInputStream:input] build];
}
+ (UninterpretedOption*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UninterpretedOption*)[[[UninterpretedOption builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UninterpretedOption*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UninterpretedOption*)[[[UninterpretedOption builder] mergeFromCodedInputStream:input] build];
}
+ (UninterpretedOption*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UninterpretedOption*)[[[UninterpretedOption builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UninterpretedOption_Builder*) builder {
  return [[[UninterpretedOption_Builder alloc] init] autorelease];
}
+ (UninterpretedOption_Builder*) builderWithPrototype:(UninterpretedOption*) prototype {
  return [[UninterpretedOption builder] mergeFrom:prototype];
}
- (UninterpretedOption_Builder*) builder {
  return [UninterpretedOption builder];
}
@end

@interface UninterpretedOption_NamePart ()
@property (retain) NSString* namePart;
@property BOOL isExtension;
@end

@implementation UninterpretedOption_NamePart

- (BOOL) hasNamePart {
  return !!hasNamePart_;
}
- (void) setHasNamePart:(BOOL) value {
  hasNamePart_ = !!value;
}
@synthesize namePart;
- (BOOL) hasIsExtension {
  return !!hasIsExtension_;
}
- (void) setHasIsExtension:(BOOL) value {
  hasIsExtension_ = !!value;
}
- (BOOL) isExtension {
  return !!isExtension_;
}
- (void) setIsExtension:(BOOL) value {
  isExtension_ = !!value;
}
- (void) dealloc {
  self.namePart = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.namePart = @"";
    self.isExtension = NO;
  }
  return self;
}
static UninterpretedOption_NamePart* defaultUninterpretedOption_NamePartInstance = nil;
+ (void) initialize {
  if (self == [UninterpretedOption_NamePart class]) {
    defaultUninterpretedOption_NamePartInstance = [[UninterpretedOption_NamePart alloc] init];
  }
}
+ (UninterpretedOption_NamePart*) defaultInstance {
  return defaultUninterpretedOption_NamePartInstance;
}
- (UninterpretedOption_NamePart*) defaultInstance {
  return defaultUninterpretedOption_NamePartInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNamePart) {
    return NO;
  }
  if (!self.hasIsExtension) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNamePart) {
    [output writeString:1 value:self.namePart];
  }
  if (self.hasIsExtension) {
    [output writeBool:2 value:self.isExtension];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasNamePart) {
    size += computeStringSize(1, self.namePart);
  }
  if (self.hasIsExtension) {
    size += computeBoolSize(2, self.isExtension);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UninterpretedOption_NamePart*) parseFromData:(NSData*) data {
  return (UninterpretedOption_NamePart*)[[[UninterpretedOption_NamePart builder] mergeFromData:data] build];
}
+ (UninterpretedOption_NamePart*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UninterpretedOption_NamePart*)[[[UninterpretedOption_NamePart builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UninterpretedOption_NamePart*) parseFromInputStream:(NSInputStream*) input {
  return (UninterpretedOption_NamePart*)[[[UninterpretedOption_NamePart builder] mergeFromInputStream:input] build];
}
+ (UninterpretedOption_NamePart*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UninterpretedOption_NamePart*)[[[UninterpretedOption_NamePart builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UninterpretedOption_NamePart*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UninterpretedOption_NamePart*)[[[UninterpretedOption_NamePart builder] mergeFromCodedInputStream:input] build];
}
+ (UninterpretedOption_NamePart*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UninterpretedOption_NamePart*)[[[UninterpretedOption_NamePart builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UninterpretedOption_NamePart_Builder*) builder {
  return [[[UninterpretedOption_NamePart_Builder alloc] init] autorelease];
}
+ (UninterpretedOption_NamePart_Builder*) builderWithPrototype:(UninterpretedOption_NamePart*) prototype {
  return [[UninterpretedOption_NamePart builder] mergeFrom:prototype];
}
- (UninterpretedOption_NamePart_Builder*) builder {
  return [UninterpretedOption_NamePart builder];
}
@end

@interface UninterpretedOption_NamePart_Builder()
@property (retain) UninterpretedOption_NamePart* result;
@end

@implementation UninterpretedOption_NamePart_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UninterpretedOption_NamePart alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UninterpretedOption_NamePart_Builder*) clear {
  self.result = [[[UninterpretedOption_NamePart alloc] init] autorelease];
  return self;
}
- (UninterpretedOption_NamePart_Builder*) clone {
  return [UninterpretedOption_NamePart builderWithPrototype:result];
}
- (UninterpretedOption_NamePart*) defaultInstance {
  return [UninterpretedOption_NamePart defaultInstance];
}
- (UninterpretedOption_NamePart*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UninterpretedOption_NamePart*) buildPartial {
  UninterpretedOption_NamePart* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UninterpretedOption_NamePart_Builder*) mergeFrom:(UninterpretedOption_NamePart*) other {
  if (other == [UninterpretedOption_NamePart defaultInstance]) {
    return self;
  }
  if (other.hasNamePart) {
    [self setNamePart:other.namePart];
  }
  if (other.hasIsExtension) {
    [self setIsExtension:other.isExtension];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UninterpretedOption_NamePart_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UninterpretedOption_NamePart_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setNamePart:[input readString]];
        break;
      }
      case 16: {
        [self setIsExtension:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasNamePart {
  return result.hasNamePart;
}
- (NSString*) namePart {
  return result.namePart;
}
- (UninterpretedOption_NamePart_Builder*) setNamePart:(NSString*) value {
  result.hasNamePart = YES;
  result.namePart = value;
  return self;
}
- (UninterpretedOption_NamePart_Builder*) clearNamePart {
  result.hasNamePart = NO;
  result.namePart = @"";
  return self;
}
- (BOOL) hasIsExtension {
  return result.hasIsExtension;
}
- (BOOL) isExtension {
  return result.isExtension;
}
- (UninterpretedOption_NamePart_Builder*) setIsExtension:(BOOL) value {
  result.hasIsExtension = YES;
  result.isExtension = value;
  return self;
}
- (UninterpretedOption_NamePart_Builder*) clearIsExtension {
  result.hasIsExtension = NO;
  result.isExtension = NO;
  return self;
}
@end

@interface UninterpretedOption_Builder()
@property (retain) UninterpretedOption* result;
@end

@implementation UninterpretedOption_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UninterpretedOption alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UninterpretedOption_Builder*) clear {
  self.result = [[[UninterpretedOption alloc] init] autorelease];
  return self;
}
- (UninterpretedOption_Builder*) clone {
  return [UninterpretedOption builderWithPrototype:result];
}
- (UninterpretedOption*) defaultInstance {
  return [UninterpretedOption defaultInstance];
}
- (UninterpretedOption*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UninterpretedOption*) buildPartial {
  UninterpretedOption* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UninterpretedOption_Builder*) mergeFrom:(UninterpretedOption*) other {
  if (other == [UninterpretedOption defaultInstance]) {
    return self;
  }
  if (other.mutableNameList.count > 0) {
    if (result.mutableNameList == nil) {
      result.mutableNameList = [NSMutableArray array];
    }
    [result.mutableNameList addObjectsFromArray:other.mutableNameList];
  }
  if (other.hasIdentifierValue) {
    [self setIdentifierValue:other.identifierValue];
  }
  if (other.hasPositiveIntValue) {
    [self setPositiveIntValue:other.positiveIntValue];
  }
  if (other.hasNegativeIntValue) {
    [self setNegativeIntValue:other.negativeIntValue];
  }
  if (other.hasDoubleValue) {
    [self setDoubleValue:other.doubleValue];
  }
  if (other.hasStringValue) {
    [self setStringValue:other.stringValue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UninterpretedOption_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UninterpretedOption_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 18: {
        UninterpretedOption_NamePart_Builder* subBuilder = [UninterpretedOption_NamePart builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addName:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setIdentifierValue:[input readString]];
        break;
      }
      case 32: {
        [self setPositiveIntValue:[input readUInt64]];
        break;
      }
      case 40: {
        [self setNegativeIntValue:[input readInt64]];
        break;
      }
      case 49: {
        [self setDoubleValue:[input readDouble]];
        break;
      }
      case 58: {
        [self setStringValue:[input readData]];
        break;
      }
    }
  }
}
- (NSArray*) nameList {
  if (result.mutableNameList == nil) { return [NSArray array]; }
  return result.mutableNameList;
}
- (UninterpretedOption_NamePart*) nameAtIndex:(int32_t) index {
  return [result nameAtIndex:index];
}
- (UninterpretedOption_Builder*) replaceNameAtIndex:(int32_t) index with:(UninterpretedOption_NamePart*) value {
  [result.mutableNameList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UninterpretedOption_Builder*) addAllName:(NSArray*) values {
  if (result.mutableNameList == nil) {
    result.mutableNameList = [NSMutableArray array];
  }
  [result.mutableNameList addObjectsFromArray:values];
  return self;
}
- (UninterpretedOption_Builder*) clearNameList {
  result.mutableNameList = nil;
  return self;
}
- (UninterpretedOption_Builder*) addName:(UninterpretedOption_NamePart*) value {
  if (result.mutableNameList == nil) {
    result.mutableNameList = [NSMutableArray array];
  }
  [result.mutableNameList addObject:value];
  return self;
}
- (BOOL) hasIdentifierValue {
  return result.hasIdentifierValue;
}
- (NSString*) identifierValue {
  return result.identifierValue;
}
- (UninterpretedOption_Builder*) setIdentifierValue:(NSString*) value {
  result.hasIdentifierValue = YES;
  result.identifierValue = value;
  return self;
}
- (UninterpretedOption_Builder*) clearIdentifierValue {
  result.hasIdentifierValue = NO;
  result.identifierValue = @"";
  return self;
}
- (BOOL) hasPositiveIntValue {
  return result.hasPositiveIntValue;
}
- (int64_t) positiveIntValue {
  return result.positiveIntValue;
}
- (UninterpretedOption_Builder*) setPositiveIntValue:(int64_t) value {
  result.hasPositiveIntValue = YES;
  result.positiveIntValue = value;
  return self;
}
- (UninterpretedOption_Builder*) clearPositiveIntValue {
  result.hasPositiveIntValue = NO;
  result.positiveIntValue = 0L;
  return self;
}
- (BOOL) hasNegativeIntValue {
  return result.hasNegativeIntValue;
}
- (int64_t) negativeIntValue {
  return result.negativeIntValue;
}
- (UninterpretedOption_Builder*) setNegativeIntValue:(int64_t) value {
  result.hasNegativeIntValue = YES;
  result.negativeIntValue = value;
  return self;
}
- (UninterpretedOption_Builder*) clearNegativeIntValue {
  result.hasNegativeIntValue = NO;
  result.negativeIntValue = 0L;
  return self;
}
- (BOOL) hasDoubleValue {
  return result.hasDoubleValue;
}
- (Float64) doubleValue {
  return result.doubleValue;
}
- (UninterpretedOption_Builder*) setDoubleValue:(Float64) value {
  result.hasDoubleValue = YES;
  result.doubleValue = value;
  return self;
}
- (UninterpretedOption_Builder*) clearDoubleValue {
  result.hasDoubleValue = NO;
  result.doubleValue = 0;
  return self;
}
- (BOOL) hasStringValue {
  return result.hasStringValue;
}
- (NSData*) stringValue {
  return result.stringValue;
}
- (UninterpretedOption_Builder*) setStringValue:(NSData*) value {
  result.hasStringValue = YES;
  result.stringValue = value;
  return self;
}
- (UninterpretedOption_Builder*) clearStringValue {
  result.hasStringValue = NO;
  result.stringValue = [NSData data];
  return self;
}
@end

